{"ast":null,"code":"import Memento from './Memento-contianer';\nimport { connect } from 'react-redux';\nimport { loadData } from '../../../actions';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state.data);\n  return {\n    data: state.data.mementos,\n    viewer: state.perspective.viewer,\n    isEditing: state.toggles.editing,\n    isDeleting: state.toggles.deleting\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateData: function updateData(data, label) {\n      return dispatch(loadData(data, label));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Memento);","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/Cards/Mementos/Memento-redux.js"],"names":["Memento","connect","loadData","mapStateToProps","state","console","log","data","mementos","viewer","perspective","isEditing","toggles","editing","isDeleting","deleting","mapDispatchToProps","dispatch","updateData","label"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AACA,SAAO;AACHA,IAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWC,QADd;AAEHC,IAAAA,MAAM,EAAEL,KAAK,CAACM,WAAN,CAAkBD,MAFvB;AAGHE,IAAAA,SAAS,EAAEP,KAAK,CAACQ,OAAN,CAAcC,OAHtB;AAIHC,IAAAA,UAAU,EAAEV,KAAK,CAACQ,OAAN,CAAcG;AAJvB,GAAP;AAMH,CARD;;AAUA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHC,IAAAA,UAAU,EAAE,oBAACX,IAAD,EAAOY,KAAP;AAAA,aAAiBF,QAAQ,CAACf,QAAQ,CAACK,IAAD,EAAOY,KAAP,CAAT,CAAzB;AAAA;AADT,GAAP;AAGH,CAJD;;AAMA,eAAelB,OAAO,CAACE,eAAD,EAAkBa,kBAAlB,CAAP,CAA6ChB,OAA7C,CAAf","sourcesContent":["import Memento from './Memento-contianer'\nimport { connect } from 'react-redux'\nimport { loadData } from '../../../actions'\n\n\nconst mapStateToProps = state => {\n    console.log(state.data)\n    return {\n        data: state.data.mementos,\n        viewer: state.perspective.viewer,\n        isEditing: state.toggles.editing,\n        isDeleting: state.toggles.deleting\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateData: (data, label) => dispatch(loadData(data, label))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Memento)\n"]},"metadata":{},"sourceType":"module"}