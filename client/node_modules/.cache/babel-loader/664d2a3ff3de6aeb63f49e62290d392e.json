{"ast":null,"code":"/**\r\n * Module that defines everything related to building Candlesticks.\r\n */\nimport * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Column } from \"./Column\";\nimport { Line } from \"../../core/elements/Line\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Class used to creates Candlesticks.\r\n *\r\n * @see {@link ICandlestickEvents} for a list of available events\r\n * @see {@link ICandlestickAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar Candlestick =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Candlestick, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Candlestick() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"Candlestick\";\n    _this.layout = \"none\";\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  Candlestick.prototype.createAssets = function () {\n    _super.prototype.createAssets.call(this);\n\n    this.lowLine = this.createChild(Line);\n    this.lowLine.shouldClone = false;\n    this.highLine = this.createChild(Line);\n    this.highLine.shouldClone = false;\n  };\n  /**\r\n   * Copies all parameters from another [[Candlestick]].\r\n   *\r\n   * @param source Source Candlestick\r\n   */\n\n\n  Candlestick.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    if (this.lowLine) {\n      this.lowLine.copyFrom(source.lowLine);\n    }\n\n    if (this.highLine) {\n      this.highLine.copyFrom(source.highLine);\n    }\n  };\n\n  return Candlestick;\n}(Column);\n\nexport { Candlestick };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Candlestick\"] = Candlestick;","map":null,"metadata":{},"sourceType":"module"}