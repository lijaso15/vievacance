{"ast":null,"code":"/**\r\n * Map object module\r\n */\nimport * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Container } from \"../../core/Container\";\nimport { registry } from \"../../core/Registry\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as d3geo from \"d3-geo\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * A base class for all map objects: lines, images, etc.\r\n *\r\n * @see {@link IMapObjectEvents} for a list of available events\r\n * @see {@link IMapObjectAdapters} for a list of available Adapters\r\n */\n\nvar MapObject =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MapObject, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function MapObject() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"MapObject\"; // Set defaults\n\n    _this.isMeasured = false;\n    _this.layout = \"none\";\n    _this.clickable = true; // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * (Re)validates this object, forcing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  MapObject.prototype.validate = function () {\n    if (this.series) {\n      this.readerTitle = this.series.itemReaderText;\n    }\n\n    _super.prototype.validate.call(this);\n  };\n  /**\r\n   * Updates the item's bounding coordinates: coordinates of the East, West,\r\n   * North, and South-most points.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  MapObject.prototype.updateExtremes = function () {\n    var feature = this.getFeature();\n\n    if (feature) {\n      var geometry = feature.geometry;\n\n      if (geometry) {\n        var bounds = d3geo.geoBounds(geometry);\n        var west = bounds[0][0];\n        var south = bounds[0][1];\n        var north = bounds[1][1];\n        var east = bounds[1][0];\n        var changed = false;\n\n        if (north != this.north) {\n          this._north = $math.round(north, 8);\n          changed = true;\n        }\n\n        if (south != this.south) {\n          this._south = $math.round(south);\n          changed = true;\n        }\n\n        if (east != this.east) {\n          this._east = $math.round(east);\n          changed = true;\n        }\n\n        if (west != this.west) {\n          this._west = $math.round(west);\n          changed = true;\n        }\n\n        if (changed) {\n          this.dispatch(\"geoBoundsChanged\");\n\n          if (this.series) {\n            this.series.invalidateDataItems();\n          }\n        }\n      }\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  MapObject.prototype.getFeature = function () {\n    return {};\n  };\n\n  Object.defineProperty(MapObject.prototype, \"east\", {\n    /**\r\n     * Longitude of the East-most point of the element.\r\n     */\n    get: function get() {\n      if ($type.isNumber(this._east)) {\n        return this._east;\n      } else if (this.dataItem) {\n        return this.dataItem.east;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MapObject.prototype, \"west\", {\n    /**\r\n     * Longitude of the West-most point of the element.\r\n     */\n    get: function get() {\n      if ($type.isNumber(this._west)) {\n        return this._west;\n      } else if (this.dataItem) {\n        return this.dataItem.west;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MapObject.prototype, \"south\", {\n    /**\r\n     * Latitude of the South-most point of the element.\r\n     */\n    get: function get() {\n      if ($type.isNumber(this._south)) {\n        return this._south;\n      } else if (this.dataItem) {\n        return this.dataItem.south;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MapObject.prototype, \"north\", {\n    /**\r\n     * Latitude of the North-most point of the element.\r\n     */\n    get: function get() {\n      if ($type.isNumber(this._north)) {\n        return this._north;\n      } else if (this.dataItem) {\n        return this.dataItem.north;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return MapObject;\n}(Container);\n\nexport { MapObject };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"MapObject\"] = MapObject;","map":null,"metadata":{},"sourceType":"module"}