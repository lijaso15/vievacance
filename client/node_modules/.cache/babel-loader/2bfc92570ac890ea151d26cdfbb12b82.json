{"ast":null,"code":"import * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Sprite } from \"../../core/Sprite\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * AxisFill is a base class used to defines fill shapes for various\r\n * type-specific Axes.\r\n *\r\n * Axis fills are used to add fills to specific ranges of those axes.\r\n *\r\n * @see {@link IAxisFillEvents} for a list of available events\r\n * @see {@link IAxisFillAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar AxisFill =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(AxisFill, _super);\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param axis Axis\r\n   */\n\n\n  function AxisFill(axis) {\n    var _this = _super.call(this) || this;\n\n    _this.axis = axis;\n    _this.element = _this.paper.add(\"path\");\n    _this.className = \"AxisFill\";\n    _this.isMeasured = false;\n    _this.location = 0;\n    var interfaceColors = new InterfaceColorSet();\n    _this.fill = interfaceColors.getFor(\"alternativeBackground\");\n    _this.fillOpacity = 0;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  AxisFill.prototype.setDisabled = function (value) {\n    var changed = _super.prototype.setDisabled.call(this, value);\n\n    if (this.axis) {\n      this.axis.invalidateDataItems();\n    }\n\n    return changed;\n  };\n  /**\r\n   * Draws the fill element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  AxisFill.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n\n    if (this.axis && $type.isNumber(this.startPosition) && $type.isNumber(this.endPosition)) {\n      this.fillPath = this.axis.getPositionRangePath(this.startPosition, this.endPosition);\n      this.path = this.fillPath;\n    }\n  };\n\n  Object.defineProperty(AxisFill.prototype, \"startPosition\", {\n    /**\r\n     * @return Start position\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"startPosition\");\n    },\n\n    /**\r\n     * An actual starting position of the fill.\r\n     *\r\n     * @param value  Starting position\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"startPosition\", value);\n      this.invalidate(); // this is needed as relative position might not change when zooming\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisFill.prototype, \"endPosition\", {\n    /**\r\n     * @return End position\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"endPosition\");\n    },\n\n    /**\r\n     * An actual end position of the fill.\r\n     *\r\n     * @param value End position\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"endPosition\", value);\n      this.invalidate(); // this is needed as relative position might not change when zooming\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisFill.prototype, \"location\", {\n    /**\r\n     * @return Location (0-1)\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"location\");\n    },\n\n    /**\r\n     * Relative location of the fill. (0-1)\r\n     *\r\n     * @param value Location (0-1)\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"location\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AxisFill;\n}(Sprite);\n\nexport { AxisFill };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"AxisFill\"] = AxisFill;","map":null,"metadata":{},"sourceType":"module"}