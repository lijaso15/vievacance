{"ast":null,"code":"import _objectSpread from \"/Users/Overseer/Desktop/vievacance/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Overseer/Desktop/vievacance/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Overseer/Desktop/vievacance/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Overseer/Desktop/vievacance/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Overseer/Desktop/vievacance/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Overseer/Desktop/vievacance/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Overseer/Desktop/vievacance/client/src/components/Globe/Globe.js\";\nimport React, { Component } from 'react';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport worldHigh from '@amcharts/amcharts4-geodata/worldHigh';\nimport axios from 'axios';\nimport './Globe.css';\nam4core.useTheme(am4themes_animated);\n\nvar Globe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Globe, _Component);\n\n  function Globe() {\n    _classCallCheck(this, Globe);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Globe).apply(this, arguments));\n  }\n\n  _createClass(Globe, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      am4core.useTheme(am4themes_animated); // create map instance\n\n      var chart = am4core.create(\"chartdiv\", am4maps.MapChart); // Set map definition\n\n      chart.geodata = worldHigh; // setting projection\n\n      chart.projection = new am4maps.projections.Orthographic(); // Create map polygon series\n      // represents map areas\n\n      var polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n      polygonSeries.useGeodata = true; // configure appearance and behavior of its items by accessing templates\n\n      var polygonTemplate = polygonSeries.mapPolygons.template;\n      polygonTemplate.tooltipText = \"{name}\";\n      polygonTemplate.fill = chart.colors.getIndex(0).lighten(0.5);\n      var hs = polygonTemplate.states.create(\"hover\");\n      hs.properties.fill = chart.colors.getIndex(0);\n      polygonTemplate.fill = am4core.color(\"#363636\");\n      polygonTemplate.propertyFields.fill = 'color';\n      var imageSeries = chart.series.push(new am4maps.MapImageSeries());\n      var imageSeriesTemplate = imageSeries.mapImages.template;\n      var circle = imageSeriesTemplate.createChild(am4core.Circle);\n      circle.radius = 4;\n      circle.strokeWidth = 2;\n      circle.tooltipText = '{title}';\n      circle.nonScaling = true;\n      circle.interactions.hoverable = true;\n      circle.url = '{url}';\n      imageSeriesTemplate.propertyFields.latitude = \"latitude\";\n      imageSeriesTemplate.propertyFields.longitude = \"longitude\";\n      circle.propertyFields.fill = 'fill';\n      var grid = chart.series.push(new am4maps.GraticuleSeries());\n      grid.toBack(); // grid.mapLines.template.line.stroke = am4core.color(\"#e33\");\n      // grid.mapLines.template.line.strokeOpacity = 0.2;\n\n      chart.panBehavior = \"rotateLongLat\";\n      axios.get('/globeData').then(function (res) {\n        if (res.status === 200) {\n          imageSeries.data = res.data.map(function (city) {\n            return _objectSpread({}, city, {\n              fill: am4core.color(city.popularity)\n            });\n          });\n        }\n      }).catch(function (err) {\n        return alert(err);\n      });\n      this.chart = chart;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        class: \"hero is-link is-fullheight-with-navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"hero-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        class: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Fullheight hero with navbar\"))));\n    }\n  }]);\n\n  return Globe;\n}(Component);\n\nexport default Globe;","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/Globe/Globe.js"],"names":["React","Component","am4core","am4themes_animated","am4maps","worldHigh","axios","useTheme","Globe","chart","create","MapChart","geodata","projection","projections","Orthographic","polygonSeries","series","push","MapPolygonSeries","useGeodata","polygonTemplate","mapPolygons","template","tooltipText","fill","colors","getIndex","lighten","hs","states","properties","color","propertyFields","imageSeries","MapImageSeries","imageSeriesTemplate","mapImages","circle","createChild","Circle","radius","strokeWidth","nonScaling","interactions","hoverable","url","latitude","longitude","grid","GraticuleSeries","toBack","panBehavior","get","then","res","status","data","map","city","popularity","catch","err","alert","dispose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport worldHigh from '@amcharts/amcharts4-geodata/worldHigh'\nimport axios from 'axios'\nimport './Globe.css'\n\nam4core.useTheme(am4themes_animated);\n\nclass Globe extends Component {\n    componentDidMount() {\n\n        am4core.useTheme(am4themes_animated);\n        // create map instance\n        const chart = am4core.create(\"chartdiv\", am4maps.MapChart);\n        // Set map definition\n        chart.geodata = worldHigh\n        // setting projection\n        chart.projection = new am4maps.projections.Orthographic();\n        // Create map polygon series\n        // represents map areas\n        var polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        polygonSeries.useGeodata = true;\n        // configure appearance and behavior of its items by accessing templates\n        var polygonTemplate = polygonSeries.mapPolygons.template;\n        polygonTemplate.tooltipText = \"{name}\";\n        polygonTemplate.fill = chart.colors.getIndex(0).lighten(0.5);\n        var hs = polygonTemplate.states.create(\"hover\");\n        hs.properties.fill = chart.colors.getIndex(0);\n        polygonTemplate.fill = am4core.color(\"#363636\");\n        polygonTemplate.propertyFields.fill = 'color'\n\n        let imageSeries = chart.series.push(new am4maps.MapImageSeries());\n        let imageSeriesTemplate = imageSeries.mapImages.template;\n        let circle = imageSeriesTemplate.createChild(am4core.Circle);\n        circle.radius = 4;\n        circle.strokeWidth = 2;\n        circle.tooltipText = '{title}'\n        circle.nonScaling = true;\n        circle.interactions.hoverable = true\n        circle.url = '{url}'\n        imageSeriesTemplate.propertyFields.latitude = \"latitude\";\n        imageSeriesTemplate.propertyFields.longitude = \"longitude\";\n        circle.propertyFields.fill = 'fill'\n\n        let grid = chart.series.push(new am4maps.GraticuleSeries());\n        grid.toBack();\n        // grid.mapLines.template.line.stroke = am4core.color(\"#e33\");\n        // grid.mapLines.template.line.strokeOpacity = 0.2;\n        chart.panBehavior = \"rotateLongLat\";\n\n        axios.get('/globeData').then(res => {\n            if (res.status === 200) {\n                imageSeries.data = (res.data).map(city => {\n                    return { ...city, fill: am4core.color(city.popularity) }\n                })\n            }\n        }).catch(err => alert(err))\n\n        this.chart = chart;\n\n    }\n\n    componentWillUnmount() {\n        if (this.chart) {\n            this.chart.dispose();\n        }\n    }\n\n    render() {\n        return (\n            <section class=\"hero is-link is-fullheight-with-navbar\">\n                <div class=\"hero-body\">\n                    <div class=\"container\">\n                        <p class=\"title\">\n                            Fullheight hero with navbar\n      </p>\n                    </div>\n                </div>\n            </section>\n\n        );\n    }\n}\n\nexport default Globe;"]},"metadata":{},"sourceType":"module"}