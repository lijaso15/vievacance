{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/vievacance/client/src/components/ChangeSettings/ChangeSettings-view.js\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport Input from '../Forms/Input';\nvar ChangeUsernameSchema = Yup.object().shape({\n  username: Yup.string().min(6, 'username must be at least 6 characters').max(24, 'username cannot be greater than 20 characters').required('username is required')\n});\n\nvar ChangeSettingsView = function ChangeSettingsView(_ref) {\n  var email = _ref.email,\n      username = _ref.username,\n      owner = _ref.owner;\n  return React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \" Email: \"), React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \" \", email, \" \"), React.createElement(\"div\", {\n    className: \"columns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column is-one-third\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      newusername: '',\n      success: ''\n    },\n    validationSchema: ChangeUsernameSchema,\n    onSubmit: function onSubmit(values, actions) {\n      axios.post(\"/users/changeusername/\".concat(owner), values).then(function (res) {\n        if (res.status === 200) {\n          actions.setFieldValue('success', \"Success! Your username has been changed to \".concat(values.newusername));\n        } else {\n          alert(res);\n        }\n      }).catch(function (err) {\n        if (err.response) {\n          actions.setErrors(err.response.data);\n        } else {\n          alert(err);\n        }\n      });\n    },\n    render: function render(_ref2) {\n      var values = _ref2.values,\n          isSubmitting = _ref2.isSubmitting;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"newusername\",\n        component: Input,\n        type: \"text\",\n        placeholder: username,\n        icons: {\n          left: 'user',\n          right: 'check'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button is-link\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Change Username\"), values.success && React.createElement(\"article\", {\n        className: \"message is-success is-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, values.success)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"column is-one-third\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      success: ''\n    },\n    validationSchema: ChangeUsernameSchema,\n    onSubmit: function onSubmit(values, actions) {// axios.post\n    },\n    render: function render(_ref3) {\n      var values = _ref3.values,\n          isSubmitting = _ref3.isSubmitting;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"username\",\n        component: Input,\n        type: \"text\",\n        placeholder: username,\n        icons: {\n          left: 'user',\n          right: 'check'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button is-link\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Change Username\"), values.success && React.createElement(\"article\", {\n        className: \"message is-success is-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, values.success)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))));\n};\n\nexport default ChangeSettingsView;","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/ChangeSettings/ChangeSettings-view.js"],"names":["React","Formik","Form","Field","Yup","axios","Input","ChangeUsernameSchema","object","shape","username","string","min","max","required","ChangeSettingsView","email","owner","newusername","success","values","actions","post","then","res","status","setFieldValue","alert","catch","err","response","setErrors","data","isSubmitting","left","right"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field } from 'formik'\nimport * as Yup from \"yup\"\nimport axios from \"axios\"\nimport Input from '../Forms/Input'\n\nconst ChangeUsernameSchema = Yup.object().shape({\n    username: Yup.string()\n        .min(6, 'username must be at least 6 characters')\n        .max(24, 'username cannot be greater than 20 characters')\n        .required('username is required')\n})\n\n\nconst ChangeSettingsView = ({ email, username, owner }) => {\n    return <div className=\"column\">\n        <h2 className=\"subtitle\"> Email: </h2>\n        <b> {email} </b>\n        <div className=\"columns\">\n            <div className=\"column is-one-third\">\n                <Formik\n                    initialValues={{\n                        newusername: '',\n                        success: ''\n                    }}\n                    validationSchema={ChangeUsernameSchema}\n                    onSubmit={(values, actions) => {\n                        axios.post(`/users/changeusername/${owner}`, values).then(res => {\n                            if (res.status === 200) {\n                                actions.setFieldValue('success', `Success! Your username has been changed to ${values.newusername}`)\n                            } else {\n                                alert(res)\n                            }\n                        }).catch(err => {\n                            if (err.response) {\n                                actions.setErrors(err.response.data)\n                            } else {\n                                alert(err)\n                            }\n                        })\n                    }}\n                    render={({ values, isSubmitting }) => (\n                        <Form>\n                            <Field name=\"newusername\" component={Input} type=\"text\" placeholder={username} icons={{ left: 'user', right: 'check' }} />\n                            <button className=\"button is-link\" type=\"submit\" disabled={isSubmitting}>Change Username</button>\n                            {values.success && <article className=\"message is-success is-small\">\n                                <div className=\"message-body\">\n                                    {values.success}\n                                </div>\n                            </article>}\n                        </Form>\n                    )}\n                />\n            </div>\n            <div className=\"column is-one-third\">\n                <Formik\n                    initialValues={{\n                        username: '',\n                        success: ''\n                    }}\n                    validationSchema={ChangeUsernameSchema}\n                    onSubmit={(values, actions) => {\n                        // axios.post\n                    }}\n                    render={({ values, isSubmitting }) => (\n                        <Form>\n                            <Field name=\"username\" component={Input} type=\"text\" placeholder={username} icons={{ left: 'user', right: 'check' }} />\n                            <button className=\"button is-link\" type=\"submit\" disabled={isSubmitting}>Change Username</button>\n                            {values.success && <article className=\"message is-success is-small\">\n                                <div className=\"message-body\">\n                                    {values.success}\n                                </div>\n                            </article>}\n                        </Form>\n                    )}\n                />\n            </div>\n        </div>\n    </div>\n}\n\nexport default ChangeSettingsView"]},"metadata":{},"sourceType":"module"}