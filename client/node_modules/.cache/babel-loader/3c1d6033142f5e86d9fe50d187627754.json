{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/vievacance/client/src/components/Cards/Mementos/Memento-view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Slideshow from '../../Slideshow';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nvar MementoView = function MementoView(_ref) {\n  var owner = _ref.owner,\n      photos = _ref.photos,\n      title = _ref.title,\n      description = _ref.description,\n      active = _ref.active,\n      onClick = _ref.onClick,\n      id = _ref.id,\n      fullAccess = _ref.fullAccess;\n  return React.createElement(\"div\", {\n    class: \"column is-one-quarter\",\n    style: {\n      borderStyle: 'groove'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    onClick: onClick,\n    id: \"info\",\n    className: \"image container\",\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Slideshow, {\n    slides: photos.map(function (p) {\n      return {\n        title: '',\n        subtitle: '',\n        image: \"http://localhost:5000/photos/\".concat(owner, \"/\").concat(p)\n      };\n    }),\n    id: id,\n    isBox: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      backgroundColor: 'hsl(0, 0%, 96%)'\n    },\n    className: \"subtitle\",\n    href: \"/citypage/\".concat(title.split(',')[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" \", title), fullAccess ? React.createElement(\"div\", {\n    class: \"dropdown is-hoverable\",\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"dropdown-trigger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    class: \"button\",\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"dropdown-menu4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: 'edit',\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"dropdown-menu\",\n    id: \"dropdown-menu4\",\n    role: \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"dropdown-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/\",\n    onClick: function onClick() {\n      return false;\n    },\n    class: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"edit\"), React.createElement(\"a\", {\n    href: \"/\",\n    class: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"delete\")))) : null), React.createElement(\"div\", {\n    className: \"content is-small\",\n    style: {\n      backgroundColor: 'hsl(0, 0%, 96%)',\n      margin: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, description.length > 150 ? description.slice(0, 150) + '...' : '...'), React.createElement(\"div\", {\n    className: active ? \"modal is-active\" : \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: onClick,\n    class: \"modal-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    class: \"modal-card-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    class: \"modal-card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Modal title\")), React.createElement(Slideshow, {\n    slides: photos.map(function (p) {\n      return {\n        title: '',\n        subtitle: '',\n        image: \"http://localhost:5000/photos/\".concat(owner, \"/\").concat(p)\n      };\n    }),\n    id: id,\n    isModal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"footer\", {\n    class: \"modal-card-foot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, description)), React.createElement(\"button\", {\n    onClick: onClick,\n    class: \"modal-close is-large\",\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })));\n};\n\nMementoView.propTypes = {\n  isEmpty: PropTypes.bool.isRequired,\n  owner: PropTypes.string.isRequired\n};\nexport default MementoView;","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/Cards/Mementos/Memento-view.js"],"names":["React","PropTypes","Slideshow","FontAwesomeIcon","MementoView","owner","photos","title","description","active","onClick","id","fullAccess","borderStyle","width","map","p","subtitle","image","position","top","left","backgroundColor","split","bottom","right","margin","length","slice","propTypes","isEmpty","bool","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA4E;AAAA,MAAzEC,KAAyE,QAAzEA,KAAyE;AAAA,MAAlEC,MAAkE,QAAlEA,MAAkE;AAAA,MAA1DC,KAA0D,QAA1DA,KAA0D;AAAA,MAAnDC,WAAmD,QAAnDA,WAAmD;AAAA,MAAtCC,MAAsC,QAAtCA,MAAsC;AAAA,MAA9BC,OAA8B,QAA9BA,OAA8B;AAAA,MAArBC,EAAqB,QAArBA,EAAqB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC5F,SAAO;AAAK,IAAA,KAAK,EAAC,uBAAX;AACH,IAAA,KAAK,EAAE;AACHC,MAAAA,WAAW,EAAE;AADV,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMH;AAAQ,IAAA,OAAO,EAAEH,OAAjB;AAA0B,IAAA,EAAE,EAAC,MAA7B;AAAoC,IAAA,SAAS,EAAC,iBAA9C;AAAgE,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAER,MAAM,CAACS,GAAP,CAAW,UAAAC,CAAC,EAAI;AAC/B,aAAO;AACHT,QAAAA,KAAK,EAAE,EADJ;AAEHU,QAAAA,QAAQ,EAAE,EAFP;AAGHC,QAAAA,KAAK,yCAAkCb,KAAlC,cAA2CW,CAA3C;AAHF,OAAP;AAKH,KANkB,CAAnB;AAMI,IAAA,EAAE,EAAEL,EANR;AAMY,IAAA,KAAK,EAAE,IANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AAAG,IAAA,KAAK,EAAE;AACNQ,MAAAA,QAAQ,EAAE,UADJ;AAENC,MAAAA,GAAG,EAAE,CAFC;AAGNC,MAAAA,IAAI,EAAE,CAHA;AAINC,MAAAA,eAAe,EAAE;AAJX,KAAV;AAKG,IAAA,SAAS,EAAC,UALb;AAMI,IAAA,IAAI,sBAAef,KAAK,CAACgB,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAf,CANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOGhB,KAPH,CARJ,EAiBKK,UAAU,GAAG;AAAK,IAAA,KAAK,EAAC,uBAAX;AAAmC,IAAA,KAAK,EAAE;AACpDO,MAAAA,QAAQ,EAAE,UAD0C;AAEpDK,MAAAA,MAAM,EAAE,CAF4C;AAGpDC,MAAAA,KAAK,EAAE;AAH6C,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKV;AAAK,IAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,qBAAc,MAArC;AAA4C,qBAAc,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE,MAAvB;AAA+B,IAAA,IAAI,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADJ,CALU,EAUV;AAAK,IAAA,KAAK,EAAC,eAAX;AAA2B,IAAA,EAAE,EAAC,gBAA9B;AAA+C,IAAA,IAAI,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,OAAO,EAAE;AAAA,aAAM,KAAN;AAAA,KAArB;AAAkC,IAAA,KAAK,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAII;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CADJ,CAVU,CAAH,GAoBF,IArCb,CANG,EAgDH;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,KAAK,EAAE;AACrCH,MAAAA,eAAe,EAAE,iBADoB;AAErCI,MAAAA,MAAM,EAAE;AAF6B,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKlB,WAAW,CAACmB,MAAZ,GAAqB,GAArB,GAA2BnB,WAAW,CAACoB,KAAZ,CAAkB,CAAlB,EAAqB,GAArB,IAA4B,KAAvD,GAA+D,KAJpE,CAhDG,EAsDH;AAAK,IAAA,SAAS,EAAEnB,MAAM,GAAG,iBAAH,GAAuB,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,OAAO,EAAEC,OAAd;AAAuB,IAAA,KAAK,EAAC,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,KAAK,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,EAII,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEJ,MAAM,CAACS,GAAP,CAAW,UAAAC,CAAC,EAAI;AAC/B,aAAO;AACHT,QAAAA,KAAK,EAAE,EADJ;AAEHU,QAAAA,QAAQ,EAAE,EAFP;AAGHC,QAAAA,KAAK,yCAAkCb,KAAlC,cAA2CW,CAA3C;AAHF,OAAP;AAKH,KANkB,CAAnB;AAMI,IAAA,EAAE,EAAEL,EANR;AAMY,IAAA,OAAO,EAAE,IANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAWI;AAAQ,IAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,WAAjC,CAXJ,CAFJ,EAgBI;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAA0B,IAAA,KAAK,EAAC,sBAAhC;AAAuD,kBAAW,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CAtDG,CAAP;AA4EH,CA7ED;;AA+EAN,WAAW,CAACyB,SAAZ,GAAwB;AACpBC,EAAAA,OAAO,EAAE7B,SAAS,CAAC8B,IAAV,CAAeC,UADJ;AAEpB3B,EAAAA,KAAK,EAAEJ,SAAS,CAACgC,MAAV,CAAiBD;AAFJ,CAAxB;AAKA,eAAe5B,WAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Slideshow from '../../Slideshow'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nconst MementoView = ({ owner, photos, title, description, active, onClick, id, fullAccess }) => {\n    return <div class=\"column is-one-quarter\"\n        style={{\n            borderStyle: 'groove'\n        }}\n    >\n\n        <figure onClick={onClick} id=\"info\" className=\"image container\" style={{ width: '100%' }}>\n            <Slideshow slides={photos.map(p => {\n                return {\n                    title: '',\n                    subtitle: '',\n                    image: `http://localhost:5000/photos/${owner}/${p}`\n                }\n            })} id={id} isBox={true} />\n            <a style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                backgroundColor: 'hsl(0, 0%, 96%)'\n            }} className=\"subtitle\"\n                href={`/citypage/${title.split(',')[0]}`}\n            > {title}</a>\n\n            {fullAccess ? <div class=\"dropdown is-hoverable\" style={{\n                position: 'absolute',\n                bottom: 0,\n                right: 0,\n            }}>\n                <div class=\"dropdown-trigger\">\n                    <button class=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu4\"\n                    ><FontAwesomeIcon icon={'edit'} size='lg' />\n                    </button>\n                </div>\n                <div class=\"dropdown-menu\" id=\"dropdown-menu4\" role=\"menu\">\n                    <div class=\"dropdown-content\">\n                        <a href=\"/\" onClick={() => false} class=\"dropdown-item\">\n                            edit\n                        </a>\n                        <a href=\"/\" class=\"dropdown-item\">\n                            delete\n                        </a>\n                    </div>\n                </div>\n            </div> : null}\n\n        </figure>\n\n\n        <div className=\"content is-small\" style={{\n            backgroundColor: 'hsl(0, 0%, 96%)',\n            margin: 0\n        }}>\n            {description.length > 150 ? description.slice(0, 150) + '...' : '...'}\n        </div>\n        <div className={active ? \"modal is-active\" : \"modal\"}>\n            <div onClick={onClick} class=\"modal-background\"></div>\n            <div class=\"modal-content\">\n                <header class=\"modal-card-head\">\n                    <p class=\"modal-card-title\">Modal title</p>\n                </header>\n                <Slideshow slides={photos.map(p => {\n                    return {\n                        title: '',\n                        subtitle: '',\n                        image: `http://localhost:5000/photos/${owner}/${p}`\n                    }\n                })} id={id} isModal={true} />\n                <footer class=\"modal-card-foot\">{description}</footer>\n\n            </div>\n            <button onClick={onClick} class=\"modal-close is-large\" aria-label=\"close\"></button>\n        </div>\n\n\n\n    </div>\n}\n\nMementoView.propTypes = {\n    isEmpty: PropTypes.bool.isRequired,\n    owner: PropTypes.string.isRequired\n}\n\nexport default MementoView\n\n\n"]},"metadata":{},"sourceType":"module"}