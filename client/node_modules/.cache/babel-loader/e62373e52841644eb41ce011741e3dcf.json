{"ast":null,"code":"/**\r\n * Map line module\r\n */\nimport * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Container } from \"../../core/Container\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Draws a line on the map.\r\n *\r\n * @see {@link IMapLineObjectEvents} for a list of available events\r\n * @see {@link IMapLineObjectAdapters} for a list of available Adapters\r\n */\n\nvar MapLineObject =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MapLineObject, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function MapLineObject() {\n    var _this = _super.call(this) || this;\n\n    _this.adjustRotation = true;\n    _this.className = \"MapLineObject\";\n    _this.isMeasured = false;\n    _this.layout = \"none\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * (Re)validates element's position.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  MapLineObject.prototype.validatePosition = function () {\n    var mapLine = this.mapLine;\n\n    if (mapLine) {\n      var point = mapLine.positionToPoint(this.position);\n      this.x = point.x;\n      this.y = point.y;\n\n      if (this.adjustRotation) {\n        this.rotation = point.angle;\n      }\n\n      var dataItem = this.mapLine.dataItem;\n\n      if (dataItem) {\n        var series = this.mapLine.dataItem.component;\n        this.scale = 1 / series.scale;\n      } // hide out of bounds\n\n\n      if (mapLine.shortestDistance) {\n        var projection = this.mapLine.series.chart.projection;\n        var geoPoint = projection.positionToGeoPoint(mapLine.multiGeoLine, this.position);\n        var visible = projection.d3Path({\n          type: 'Point',\n          coordinates: [geoPoint.longitude, geoPoint.latitude]\n        });\n\n        if (!visible) {\n          this.__disabled = true;\n        } else {\n          this.__disabled = false;\n        }\n      }\n    }\n\n    _super.prototype.validatePosition.call(this);\n  };\n\n  Object.defineProperty(MapLineObject.prototype, \"position\", {\n    /**\r\n     * @return Position within the line\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"position\");\n    },\n\n    /**\r\n     * Sets object's relative position (0-1) within the line.\r\n     *\r\n     * `0` will place the object at the beginning of the line. `1` - at the end.\r\n     *\r\n     * Any intermediate number will place the object at some point within the\r\n     * line.\r\n     *\r\n     * @param value  Position within the line (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"position\", value, false, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MapLineObject.prototype, \"adjustRotation\", {\n    /**\r\n     * @return Auto-rotate\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"adjustRotation\");\n    },\n\n    /**\r\n     * If set to `true`, the object will be automatically rotated to face the\r\n     * direction of the line at the specific position.\r\n     *\r\n     * This allows creating images that has its \"front\" always facing the logical\r\n     * direction of the line.\r\n     *\r\n     * @default false\r\n     * @param value  Auto-rotate\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"adjustRotation\", value, false, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return MapLineObject;\n}(Container);\n\nexport { MapLineObject };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"MapLineObject\"] = MapLineObject;","map":null,"metadata":{},"sourceType":"module"}