{"ast":null,"code":"import Memento from './Memento-contianer';\nimport { connect } from 'react-redux';\nimport { loadData } from '../../../actions';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.data.mementos,\n    viewer: state.perspective.viewer,\n    isEditing: state.toggles.editing,\n    isDeleting: state.toggles.deleting,\n    value: state.toggles.value\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateData: function updateData(data, label) {\n      return dispatch(loadData(data, label));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Memento);","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/Cards/Mementos/Memento-redux.js"],"names":["Memento","connect","loadData","mapStateToProps","state","data","mementos","viewer","perspective","isEditing","toggles","editing","isDeleting","deleting","value","mapDispatchToProps","dispatch","updateData","label"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWC,QADd;AAEHC,IAAAA,MAAM,EAAEH,KAAK,CAACI,WAAN,CAAkBD,MAFvB;AAGHE,IAAAA,SAAS,EAAEL,KAAK,CAACM,OAAN,CAAcC,OAHtB;AAIHC,IAAAA,UAAU,EAAER,KAAK,CAACM,OAAN,CAAcG,QAJvB;AAKHC,IAAAA,KAAK,EAAEV,KAAK,CAACM,OAAN,CAAcI;AALlB,GAAP;AAOH,CARD;;AAUA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHC,IAAAA,UAAU,EAAE,oBAACZ,IAAD,EAAOa,KAAP;AAAA,aAAiBF,QAAQ,CAACd,QAAQ,CAACG,IAAD,EAAOa,KAAP,CAAT,CAAzB;AAAA;AADT,GAAP;AAGH,CAJD;;AAMA,eAAejB,OAAO,CAACE,eAAD,EAAkBY,kBAAlB,CAAP,CAA6Cf,OAA7C,CAAf","sourcesContent":["import Memento from './Memento-contianer'\nimport { connect } from 'react-redux'\nimport { loadData } from '../../../actions'\n\n\nconst mapStateToProps = state => {\n    return {\n        data: state.data.mementos,\n        viewer: state.perspective.viewer,\n        isEditing: state.toggles.editing,\n        isDeleting: state.toggles.deleting,\n        value: state.toggles.value\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateData: (data, label) => dispatch(loadData(data, label))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Memento)\n"]},"metadata":{},"sourceType":"module"}