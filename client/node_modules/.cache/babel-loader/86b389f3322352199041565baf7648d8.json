{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/vievacance/client/src/components/Forms/Signup.js\";\n// Render Prop\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik'; // import Debug from '../../utils/Debug'\n\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport Input from './Input';\nimport { connect } from 'react-redux';\nvar SignupSchema = Yup.object().shape({\n  username: Yup.string().min(6, 'username must be at least 6 characters').max(24, 'username cannot be greater than 20 characters').required('username is required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(6, 'password must be at least 6 characters').max(20, 'password cannot be greater than 20 characters').matches(/^(?=.*[a-z])/g, 'The password must contain at least 1 lowercase alphabetical character').matches(/^(?=.*[A-Z])/g, 'The password must contain at least 1 uppercase alphabetical character').matches(/^(?=.*[0-9])/g, 'The password must contain at least 1 numeric character').required('Required')\n});\n\nvar Signup = function Signup(_ref) {\n  var active = _ref.active;\n  return React.createElement(\"div\", {\n    id: \"signup\",\n    className: \"box\",\n    style: {\n      display: active ? 'block' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title is-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Signup\"), React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n      success: ''\n    },\n    validationSchema: SignupSchema,\n    onSubmit: function onSubmit(values, actions) {\n      axios.post('/users', values).then(function (res) {\n        if (res.status === 200) {\n          actions.setFieldValue('success', 'Success! Thank you for signing up.');\n        } else {\n          alert(res);\n        }\n      }).catch(function (err) {\n        if (err.response) {\n          actions.setErrors(err.response.data);\n        } else {\n          alert(err);\n        }\n      });\n      actions.setSubmitting(false);\n    },\n    render: function render(_ref2) {\n      var values = _ref2.values,\n          isSubmitting = _ref2.isSubmitting;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"username\",\n        component: Input,\n        type: \"text\",\n        placeholder: \"e.g. jellydonuts\",\n        icons: {\n          left: 'user',\n          right: 'check'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"email\",\n        component: Input,\n        type: \"email\",\n        placeholder: \"e.g. jasonli@frontend.io\",\n        icons: {\n          left: 'envelope',\n          right: 'check'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"password\",\n        component: Input,\n        type: \"password\",\n        placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n        icons: {\n          left: 'key',\n          right: 'check'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button is-link\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Submit\"), values.success && React.createElement(\"article\", {\n        className: \"message is-success is-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, values.success)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    active: state.toggles.signup\n  };\n};\n\nexport default connect(mapStateToProps)(Signup);","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/Forms/Signup.js"],"names":["React","Formik","Form","Field","Yup","axios","Input","connect","SignupSchema","object","shape","username","string","min","max","required","email","password","matches","Signup","active","display","success","values","actions","post","then","res","status","setFieldValue","alert","catch","err","response","setErrors","data","setSubmitting","isSubmitting","left","right","mapStateToProps","state","toggles","signup"],"mappings":"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","sourcesContent":["// Render Prop\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik'\n// import Debug from '../../utils/Debug'\nimport * as Yup from \"yup\"\nimport axios from \"axios\"\nimport Input from './Input'\nimport { connect } from 'react-redux'\n\n\n\nconst SignupSchema = Yup.object().shape({\n    username: Yup.string()\n        .min(6, 'username must be at least 6 characters')\n        .max(24, 'username cannot be greater than 20 characters')\n        .required('username is required'),\n    email: Yup.string()\n        .email('Invalid email')\n        .required('Required'),\n    password: Yup.string()\n        .min(6, 'password must be at least 6 characters')\n        .max(20, 'password cannot be greater than 20 characters')\n        .matches(/^(?=.*[a-z])/g, 'The password must contain at least 1 lowercase alphabetical character')\n        .matches(/^(?=.*[A-Z])/g, 'The password must contain at least 1 uppercase alphabetical character')\n        .matches(/^(?=.*[0-9])/g, 'The password must contain at least 1 numeric character')\n        .required('Required')\n});\n\n\nconst Signup = ({ active }) => {\n    return <div id=\"signup\" className=\"box\" style={{ display: active ? 'block' : 'none' }}>\n        <h1 className=\"title is-4\">Signup</h1>\n        <Formik\n            initialValues={{\n                username: '',\n                email: '',\n                password: '',\n                success: ''\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={(values, actions) => {\n                axios.post('/users', values).then((res) => {\n                    if (res.status === 200) {\n                        actions.setFieldValue('success', 'Success! Thank you for signing up.')\n                    } else {\n                        alert(res)\n                    }\n                }).catch((err) => {\n                    if (err.response) {\n                        actions.setErrors(err.response.data)\n                    } else {\n                        alert(err)\n                    }\n                })\n                actions.setSubmitting(false)\n            }\n            }\n            render={({ values, isSubmitting }) => (\n                <Form>\n                    <Field name=\"username\" component={Input} type=\"text\" placeholder=\"e.g. jellydonuts\" icons={{ left: 'user', right: 'check' }} />\n                    <Field name=\"email\" component={Input} type=\"email\" placeholder=\"e.g. jasonli@frontend.io\" icons={{ left: 'envelope', right: 'check' }} />\n                    <Field name=\"password\" component={Input} type=\"password\" placeholder=\"•••••••\" icons={{ left: 'key', right: 'check' }} />\n                    <button className=\"button is-link\" type=\"submit\" disabled={isSubmitting}>Submit</button>\n                    {values.success && <article className=\"message is-success is-small\">\n                        <div className=\"message-body\">\n                            {values.success}\n                        </div>\n                    </article>}\n                </Form>\n            )}\n        />\n    </div>\n}\n\nconst mapStateToProps = state => {\n    return {\n        active: state.toggles.signup\n    }\n}\n\n\n\nexport default connect(mapStateToProps)(Signup)"]},"metadata":{},"sourceType":"module"}