{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/fullstack_app/client/src/components/Signup/Signup-view.js\";\n// Render Prop\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport 'bulma/css/bulma.css';\nimport { FormikConsumer } from 'formik';\nimport Debug from '../../utils/Debug';\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nconst SignupSchema = Yup.object().shape({\n  username: Yup.string().min(6, 'username must be at least 6 characters').max(24, 'username cannot be greater than 20 characters').required('username is required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(6, 'password must be at least 6 characters').max(20, 'password cannot be greater than 20 characters').matches(/^(?=.*[a-z])/g, 'The password must contain at least 1 lowercase alphabetical character').matches(/^(?=.*[A-Z])/g, 'The password must contain at least 1 uppercase alphabetical character').matches(/^(?=.*[0-9])/g, 'The password must contain at least 1 numeric character').required('Required')\n});\n\nconst Signup = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: SignupSchema,\n    onSubmit: (values, actions) => {\n      // console.log(values)\n      // console.log(actions)\n      axios.post('/users', values).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n      actions.setSubmitting(false);\n      return;\n    },\n    render: ({\n      isSubmitting\n    }) => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Field, {\n      className: \"input\",\n      name: \"username\",\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Field, {\n      className: \"input\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Field, {\n      className: \"input\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button is-link\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Debug, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/Overseer/Desktop/fullstack_app/client/src/components/Signup/Signup-view.js"],"names":["React","Formik","Form","Field","ErrorMessage","FormikConsumer","Debug","Yup","axios","SignupSchema","object","shape","username","string","min","max","required","email","password","matches","Signup","values","actions","post","then","res","console","log","catch","err","setSubmitting","isSubmitting"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,qBAAP;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,MAAMC,YAAY,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AACpCC,EAAAA,QAAQ,EAAEL,GAAG,CAACM,MAAJ,GACLC,GADK,CACD,CADC,EACE,wCADF,EAELC,GAFK,CAED,EAFC,EAEG,+CAFH,EAGLC,QAHK,CAGI,sBAHJ,CAD0B;AAKpCC,EAAAA,KAAK,EAAEV,GAAG,CAACM,MAAJ,GACFI,KADE,CACI,eADJ,EAEFD,QAFE,CAEO,UAFP,CAL6B;AAQpCE,EAAAA,QAAQ,EAAEX,GAAG,CAACM,MAAJ,GACLC,GADK,CACD,CADC,EACE,wCADF,EAELC,GAFK,CAED,EAFC,EAEG,+CAFH,EAGLI,OAHK,CAGG,eAHH,EAGoB,uEAHpB,EAILA,OAJK,CAIG,eAJH,EAIoB,uEAJpB,EAKLA,OALK,CAKG,eALH,EAKoB,wDALpB,EAMLH,QANK,CAMI,UANJ;AAR0B,CAAnB,CAArB;;AAiBA,MAAMI,MAAM,GAAG,MAAM;AACjB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACXR,MAAAA,QAAQ,EAAE,EADC;AAEXK,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KADnB;AAMI,IAAA,gBAAgB,EAAET,YANtB;AAOI,IAAA,QAAQ,EAAE,CAACY,MAAD,EAASC,OAAT,KAAqB;AAC3B;AACA;AAEAd,MAAAA,KAAK,CAACe,IAAN,CAAW,QAAX,EAAqBF,MAArB,EAA6BG,IAA7B,CAAmCC,GAAD,IAAS;AACvCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAFD,EAEGG,KAFH,CAEUC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,OAJD;AAKAP,MAAAA,OAAO,CAACQ,aAAR,CAAsB,KAAtB;AACA;AAIH,KArBL;AAuBI,IAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACJ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,IAAI,EAAC,UAA9B;AAAyC,MAAA,WAAW,EAAC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,IAAI,EAAC,OAA9B;AAAsC,MAAA,IAAI,EAAC,OAA3C;AAAmD,MAAA,WAAW,EAAC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,IAAI,EAAC,UAA9B;AAAyC,MAAA,IAAI,EAAC,UAA9C;AAAyD,MAAA,WAAW,EAAC,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,IAAI,EAAC,QAAxC;AAAiD,MAAA,QAAQ,EAAEA,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAxBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CAAP;AAuCH,CAxCD;;AA0CA,eAAeX,MAAf","sourcesContent":["// Render Prop\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport 'bulma/css/bulma.css'\nimport { FormikConsumer } from 'formik'\nimport Debug from '../../utils/Debug'\nimport * as Yup from \"yup\"\nimport axios from \"axios\"\n\n\n\nconst SignupSchema = Yup.object().shape({\n    username: Yup.string()\n        .min(6, 'username must be at least 6 characters')\n        .max(24, 'username cannot be greater than 20 characters')\n        .required('username is required'),\n    email: Yup.string()\n        .email('Invalid email')\n        .required('Required'),\n    password: Yup.string()\n        .min(6, 'password must be at least 6 characters')\n        .max(20, 'password cannot be greater than 20 characters')\n        .matches(/^(?=.*[a-z])/g, 'The password must contain at least 1 lowercase alphabetical character')\n        .matches(/^(?=.*[A-Z])/g, 'The password must contain at least 1 uppercase alphabetical character')\n        .matches(/^(?=.*[0-9])/g, 'The password must contain at least 1 numeric character')\n        .required('Required')\n});\n\nconst Signup = () => {\n    return <div>\n        <Formik\n            initialValues={{\n                username: '',\n                email: '',\n                password: '',\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={(values, actions) => {\n                // console.log(values)\n                // console.log(actions)\n\n                axios.post('/users', values).then((res) => {\n                    console.log(res)\n                }).catch((err) => {\n                    console.log(err)\n                })\n                actions.setSubmitting(false)\n                return\n\n\n\n            }\n            }\n            render={({ isSubmitting }) => (\n                <Form>\n                    <Field className=\"input\" name=\"username\" placeholder=\"username\" />\n                    <ErrorMessage name=\"username\" />\n                    <Field className=\"input\" type=\"email\" name=\"email\" placeholder=\"email\" />\n                    <ErrorMessage name=\"email\" />\n                    <Field className=\"input\" type=\"password\" name=\"password\" placeholder=\"password\" />\n                    <ErrorMessage name=\"password\" />\n                    <button className=\"button is-link\" type=\"submit\" disabled={isSubmitting}>Submit</button>\n                    <Debug />\n                </Form>\n            )}\n\n        />\n    </div>\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}