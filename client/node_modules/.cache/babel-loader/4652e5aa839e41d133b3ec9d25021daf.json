{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/fullstack_app/client/src/components/Forms/Signin.js\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport 'bulma/css/bulma.css'; // import Debug from '../../utils/Debug'\n// import * as Yup from \"yup\"\n\nimport axios from \"axios\";\nimport Input from './Input';\nimport { connect } from 'react-redux';\nimport { signedIn } from '../../actions';\n\nconst Signin = ({\n  active,\n  err,\n  signedIn\n}) => {\n  return React.createElement(\"div\", {\n    style: {\n      display: active || err ? 'block' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title is-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Signin\"), React.createElement(Formik, {\n    initialValues: {\n      email: 'jasonli@mail.com',\n      password: 'Password1',\n      success: ''\n    },\n    onSubmit: (values, actions) => {\n      axios.post('http://localhost:3001/api/users/login', values).then(res => {\n        if (res.status === 200) {\n          setTimeout(() => {\n            actions.setFieldValue('success', 'Success!');\n            signedIn();\n          }, 3000);\n        } else {\n          alert(res);\n        }\n      }).catch(err => {\n        if (err.response) {\n          actions.setErrors(err.response.data);\n        } else {\n          alert(err);\n        }\n      });\n      actions.setSubmitting(false);\n    },\n    render: ({\n      values,\n      isSubmitting,\n      setFieldValue,\n      setTouched\n    }) => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, err ? setFieldValue('success', 'Please login to view your profile') && setTouched({\n      email: true,\n      password: true\n    }) : null, React.createElement(Field, {\n      name: \"email\",\n      component: Input,\n      type: \"email\",\n      placeholder: \"e.g. jasonli@frontend.io\",\n      icons: {\n        left: 'envelope',\n        right: 'check'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"password\",\n      component: Input,\n      type: \"password\",\n      placeholder: \"hhhhhhhh\",\n      icons: {\n        left: 'key',\n        right: 'check'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button is-link\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Submit\"), values.success && React.createElement(\"article\", {\n      className: \"message is-success is-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, values.success))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggles.signin,\n    err: state.err.signin\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signedIn: () => {\n      return dispatch(signedIn());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["/Users/Overseer/Desktop/fullstack_app/client/src/components/Forms/Signin.js"],"names":["React","Formik","Form","Field","axios","Input","connect","signedIn","Signin","active","err","display","email","password","success","values","actions","post","then","res","status","setTimeout","setFieldValue","alert","catch","response","setErrors","data","setSubmitting","isSubmitting","setTouched","left","right","mapStateToProps","state","toggles","signin","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field } from 'formik'\nimport 'bulma/css/bulma.css'\n// import Debug from '../../utils/Debug'\n// import * as Yup from \"yup\"\nimport axios from \"axios\"\nimport Input from './Input'\nimport { connect } from 'react-redux'\nimport { signedIn } from '../../actions'\n\nconst Signin = ({ active, err, signedIn }) => {\n    return <div style={{ display: (active || err) ? 'block' : 'none' }}>\n        <h1 className=\"title is-4\">Signin</h1>\n        <Formik\n            initialValues={{\n                email: 'jasonli@mail.com',\n                password: 'Password1',\n                success: ''\n            }}\n            onSubmit={(values, actions) => {\n                axios.post('http://localhost:3001/api/users/login', values).then((res) => {\n                    if (res.status === 200) {\n                        setTimeout(() => {\n                            actions.setFieldValue('success', 'Success!')\n                            signedIn()\n                        }, 3000)\n                    } else {\n                        alert(res)\n                    }\n                }).catch((err) => {\n                    if (err.response) {\n                        actions.setErrors(err.response.data)\n                    } else {\n                        alert(err)\n                    }\n                })\n                actions.setSubmitting(false)\n            }\n            }\n            render={({ values, isSubmitting, setFieldValue, setTouched }) => (\n                <Form>\n                    {err ? setFieldValue('success', 'Please login to view your profile') && setTouched({ email: true, password: true }) : null}\n                    <Field name=\"email\" component={Input} type=\"email\" placeholder=\"e.g. jasonli@frontend.io\" icons={{ left: 'envelope', right: 'check' }} />\n                    <Field name=\"password\" component={Input} type=\"password\" placeholder=\"hhhhhhhh\" icons={{ left: 'key', right: 'check' }} />\n                    <button className=\"button is-link\" type=\"submit\" disabled={isSubmitting}>Submit</button>\n                    {values.success && <article className=\"message is-success is-small\">\n                        <div className=\"message-body\">\n                            {values.success}\n                        </div>\n                    </article>}\n                    {/* <Debug /> */}\n                </Form>\n            )}\n        />\n    </div>\n}\n\nconst mapStateToProps = state => {\n    return {\n        active: state.toggles.signin,\n        err: state.err.signin\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signedIn: () => { return dispatch(signedIn()) }\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)"]},"metadata":{},"sourceType":"module"}