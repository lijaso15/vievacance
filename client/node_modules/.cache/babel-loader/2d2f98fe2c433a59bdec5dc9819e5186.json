{"ast":null,"code":"/**\r\n * CurvedColumnSeries module.\r\n *\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\nimport * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\nimport { CurvedColumn } from \"../elements/CurvedColumn\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar CurvedColumnSeriesDataItem =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(CurvedColumnSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function CurvedColumnSeriesDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"CurvedColumnSeriesDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  return CurvedColumnSeriesDataItem;\n}(ColumnSeriesDataItem);\n\nexport { CurvedColumnSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines [[Series]] for a curved columns graph.\r\n *\r\n * @see {@link ICurvedColumnSeriesEvents} for a list of available Events\r\n * @see {@link ICurvedColumnSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar CurvedColumnSeries =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(CurvedColumnSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function CurvedColumnSeries() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"CurvedColumnSeries\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Returns an element to use for the curved column.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Element.\r\n   */\n\n\n  CurvedColumnSeries.prototype.createColumnTemplate = function () {\n    return new CurvedColumn();\n  };\n  /**\r\n   * Validates data item's elements.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n\n  CurvedColumnSeries.prototype.validateDataElementReal = function (dataItem) {\n    var column = dataItem.column;\n\n    if (column) {\n      var curvedColumn = dataItem.column.curvedColumn;\n      curvedColumn.fill = dataItem.column.fill;\n\n      if (this.baseAxis == this.yAxis) {\n        column.orientation = \"horizontal\";\n      } else {\n        column.orientation = \"vertical\";\n      }\n    }\n\n    _super.prototype.validateDataElementReal.call(this, dataItem);\n  };\n\n  return CurvedColumnSeries;\n}(ColumnSeries);\n\nexport { CurvedColumnSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"CurvedColumnSeries\"] = CurvedColumnSeries;\nregistry.registeredClasses[\"CurvedColumnSeriesDataItem\"] = CurvedColumnSeriesDataItem;","map":null,"metadata":{},"sourceType":"module"}