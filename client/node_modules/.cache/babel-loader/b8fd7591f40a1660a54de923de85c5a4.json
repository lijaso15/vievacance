{"ast":null,"code":"import * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Pattern } from \"./Pattern\";\nimport { registry } from \"../../Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Line pattern.\r\n */\n\nvar LinePattern =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(LinePattern, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function LinePattern() {\n    var _this = _super.call(this) || this;\n\n    _this._line = _this.paper.add(\"line\");\n\n    _this.addElement(_this._line);\n\n    return _this;\n  }\n  /**\r\n   * Draws the pattern.\r\n   */\n\n\n  LinePattern.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n\n    if (this._line) {\n      this._line.attr({\n        \"x2\": this.width * 2\n      }); // to solve rotation\n\n    }\n  };\n\n  return LinePattern;\n}(Pattern);\n\nexport { LinePattern };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"LinePattern\"] = LinePattern;","map":null,"metadata":{},"sourceType":"module"}