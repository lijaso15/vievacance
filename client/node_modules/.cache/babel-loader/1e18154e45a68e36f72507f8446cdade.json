{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/vievacance/client/src/components/Navbar/NavbarHome/Navbar-container.js\";\nimport NavbarView from \"../Navbar-view\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport logout from \"../../../utils/logout\";\n\nvar Navbar = function Navbar(_ref) {\n  var active = _ref.active,\n      authenticationError = _ref.authenticationError,\n      toggleSignInButton = _ref.toggleSignInButton,\n      toggleSignUpButton = _ref.toggleSignUpButton,\n      setSignedIn = _ref.setSignedIn,\n      errorCleared = _ref.errorCleared,\n      viewer = _ref.viewer;\n  return React.createElement(NavbarView, {\n    active: active,\n    onProfileClick: function onProfileClick() {\n      return active ? window.location.replace(\"/profile/\" + viewer) : authenticationError();\n    },\n    onSigninClick: function onSigninClick() {\n      if (active) {\n        // logout\n        setSignedIn(false);\n        logout(false);\n        return;\n      } else {\n        errorCleared();\n        toggleSignInButton();\n      }\n    },\n    onSignupClick: function onSignupClick() {\n      return toggleSignUpButton();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  });\n};\n\nNavbar.propTypes = {\n  active: PropTypes.bool.isRequired,\n  authenticationError: PropTypes.func.isRequired,\n  toggleSignInButton: PropTypes.func.isRequired,\n  toggleSignUpButton: PropTypes.func.isRequired,\n  setSignedIn: PropTypes.func.isRequired,\n  errorCleared: PropTypes.func.isRequired,\n  viewer: PropTypes.string.isRequired\n};\nexport default Navbar;","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/Navbar/NavbarHome/Navbar-container.js"],"names":["NavbarView","PropTypes","React","logout","Navbar","active","authenticationError","toggleSignInButton","toggleSignUpButton","setSignedIn","errorCleared","viewer","window","location","replace","propTypes","bool","isRequired","func","string"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,gBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAQT;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,mBAMI,QANJA,mBAMI;AAAA,MALJC,kBAKI,QALJA,kBAKI;AAAA,MAJJC,kBAII,QAJJA,kBAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,MACI,QADJA,MACI;AACJ,SACE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAEN,MADV;AAEE,IAAA,cAAc,EAAE,0BAAM;AACpB,aAAOA,MAAM,GACTO,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,cAAcH,MAAtC,CADS,GAETL,mBAAmB,EAFvB;AAGD,KANH;AAOE,IAAA,aAAa,EAAE,yBAAM;AACnB,UAAID,MAAJ,EAAY;AACV;AACAI,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAN,QAAAA,MAAM,CAAC,KAAD,CAAN;AACA;AACD,OALD,MAKO;AACLO,QAAAA,YAAY;AACZH,QAAAA,kBAAkB;AACnB;AACF,KAjBH;AAkBE,IAAA,aAAa,EAAE;AAAA,aAAMC,kBAAkB,EAAxB;AAAA,KAlBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAsBD,CA/BD;;AAiCAJ,MAAM,CAACW,SAAP,GAAmB;AACjBV,EAAAA,MAAM,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADN;AAEjBX,EAAAA,mBAAmB,EAAEL,SAAS,CAACiB,IAAV,CAAeD,UAFnB;AAGjBV,EAAAA,kBAAkB,EAAEN,SAAS,CAACiB,IAAV,CAAeD,UAHlB;AAIjBT,EAAAA,kBAAkB,EAAEP,SAAS,CAACiB,IAAV,CAAeD,UAJlB;AAKjBR,EAAAA,WAAW,EAAER,SAAS,CAACiB,IAAV,CAAeD,UALX;AAMjBP,EAAAA,YAAY,EAAET,SAAS,CAACiB,IAAV,CAAeD,UANZ;AAOjBN,EAAAA,MAAM,EAAEV,SAAS,CAACkB,MAAV,CAAiBF;AAPR,CAAnB;AAUA,eAAeb,MAAf","sourcesContent":["import NavbarView from \"../Navbar-view\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport logout from \"../../../utils/logout\";\n\nconst Navbar = ({\n  active,\n  authenticationError,\n  toggleSignInButton,\n  toggleSignUpButton,\n  setSignedIn,\n  errorCleared,\n  viewer\n}) => {\n  return (\n    <NavbarView\n      active={active}\n      onProfileClick={() => {\n        return active\n          ? window.location.replace(\"/profile/\" + viewer)\n          : authenticationError();\n      }}\n      onSigninClick={() => {\n        if (active) {\n          // logout\n          setSignedIn(false);\n          logout(false);\n          return;\n        } else {\n          errorCleared();\n          toggleSignInButton();\n        }\n      }}\n      onSignupClick={() => toggleSignUpButton()}\n    />\n  );\n};\n\nNavbar.propTypes = {\n  active: PropTypes.bool.isRequired,\n  authenticationError: PropTypes.func.isRequired,\n  toggleSignInButton: PropTypes.func.isRequired,\n  toggleSignUpButton: PropTypes.func.isRequired,\n  setSignedIn: PropTypes.func.isRequired,\n  errorCleared: PropTypes.func.isRequired,\n  viewer: PropTypes.string.isRequired\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}