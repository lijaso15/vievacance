{"ast":null,"code":"/**\r\n * Axis Tick module\r\n */\nimport * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Tick } from \"../elements/Tick\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Draws an axis tick\r\n * @see {@link IAxisTickEvents} for a list of available events\r\n * @see {@link IAxisTickAdapters} for a list of available Adapters\r\n */\n\nvar AxisTick =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(AxisTick, _super);\n\n  function AxisTick() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"AxisTick\";\n    _this.element = _this.paper.add(\"path\");\n    _this.location = 0.5;\n    _this.isMeasured = false;\n    _this.pixelPerfect = true;\n    _this.strokeOpacity = 0;\n    _this.length = 5;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(AxisTick.prototype, \"location\", {\n    get: function get() {\n      return this.getPropertyValue(\"location\");\n    },\n    set: function set(value) {\n      this.setPropertyValue(\"location\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisTick.prototype, \"inside\", {\n    get: function get() {\n      return this.getPropertyValue(\"inside\");\n    },\n    set: function set(value) {\n      this.setPropertyValue(\"inside\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  AxisTick.prototype.setDisabled = function (value) {\n    var changed = _super.prototype.setDisabled.call(this, value);\n\n    if (this.axis) {\n      this.axis.invalidateDataItems();\n    }\n\n    return changed;\n  };\n\n  return AxisTick;\n}(Tick);\n\nexport { AxisTick };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"AxisTick\"] = AxisTick;","map":null,"metadata":{},"sourceType":"module"}