{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/fullstack_app/client/src/components/Navbar/NavbarOther/index.js\";\nimport Navbar from '../Navbar-view';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport React from 'react';\n\nconst NavbarOther = ({\n  authenticationError,\n  active\n}) => {\n  return React.createElement(Navbar, {\n    onSignupClick: () => {\n      return React.createElement(Redirect, {\n        to: \"/homeglobe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      });\n    },\n    onSigninClick: () => {\n      if (active) {\n        axios.get('http://localhost:3000/users/logout').catch(err => alert(err));\n        userHasLoggedOut();\n        return;\n      } else {\n        return React.createElement(Redirect, {\n          to: \"/homeglobe\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      }\n    },\n    onProfileClick: () => {\n      if (active) {\n        return React.createElement(Redirect, {\n          to: \"/profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      } else {\n        authenticationError();\n        return React.createElement(Redirect, {\n          to: \"/homeglobe\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggles.navbar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticationError: () => dispatch(authenticationError())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarOther);","map":{"version":3,"sources":["/Users/Overseer/Desktop/fullstack_app/client/src/components/Navbar/NavbarOther/index.js"],"names":["Navbar","connect","BrowserRouter","Redirect","axios","React","NavbarOther","authenticationError","active","get","catch","err","alert","userHasLoggedOut","mapStateToProps","state","toggles","navbar","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAIC,QAA1B,QAA0C,kBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,mBAAF;AAAuBC,EAAAA;AAAvB,CAAD,KAAqC;AAErD,SAAO,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAE,MAAM;AAChC,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM;AAEJ,IAAA,aAAa,EAAE,MAAM;AACpB,UAAIA,MAAJ,EAAY;AACRJ,QAAAA,KAAK,CAACK,GAAN,CAAU,oCAAV,EAAgDC,KAAhD,CAAsDC,GAAG,IAAIC,KAAK,CAACD,GAAD,CAAlE;AACAE,QAAAA,gBAAgB;AAChB;AACH,OAJD,MAIO;AACH,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ,KAVM;AAUJ,IAAA,cAAc,EAAE,MAAM;AACrB,UAAIL,MAAJ,EAAY;AACR,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,MAEO;AACHD,QAAAA,mBAAmB;AACnB,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ,KAjBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAkBH,CApBD;;AAsBA,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHP,IAAAA,MAAM,EAAEO,KAAK,CAACC,OAAN,CAAcC;AADnB,GAAP;AAGH,CAJD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHZ,IAAAA,mBAAmB,EAAE,MAAMY,QAAQ,CAACZ,mBAAmB,EAApB;AADhC,GAAP;AAGH,CAJD;;AAOA,eAAeN,OAAO,CAACa,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CZ,WAA7C,CAAf","sourcesContent":["import Navbar from '../Navbar-view'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Redirect } from \"react-router-dom\";\nimport axios from 'axios'\nimport React from 'react'\n\nconst NavbarOther = ({ authenticationError, active }) => {\n\n    return <Navbar onSignupClick={() => {\n        return <Redirect to=\"/homeglobe\" />\n    }} onSigninClick={() => {\n        if (active) {\n            axios.get('http://localhost:3000/users/logout').catch(err => alert(err))\n            userHasLoggedOut()\n            return\n        } else {\n            return <Redirect to=\"/homeglobe\" />\n        }\n    }} onProfileClick={() => {\n        if (active) {\n            return <Redirect to=\"/profile\" />\n        } else {\n            authenticationError()\n            return <Redirect to=\"/homeglobe\" />\n        }\n    }} />\n}\n\nconst mapStateToProps = state => {\n    return {\n        active: state.toggles.navbar\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authenticationError: () => dispatch(authenticationError()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarOther)"]},"metadata":{},"sourceType":"module"}