{"ast":null,"code":"/**\r\n * Tick module\r\n */\nimport * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Sprite } from \"../../core/Sprite\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * A basic Tick class.\r\n *\r\n * A tick is a short dash, mainly connecting an object like axis or slice to\r\n * it's textual label.\r\n *\r\n * @see {@link ITickEvents} for a list of available events\r\n * @see {@link ITickAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar Tick =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Tick, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Tick() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"Tick\";\n    var interfaceColors = new InterfaceColorSet();\n    _this.fillOpacity = 0;\n    _this.length = 6;\n    _this.strokeOpacity = 0.2;\n    _this.stroke = interfaceColors.getFor(\"grid\");\n    _this.isMeasured = false;\n    _this.nonScalingStroke = true;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(Tick.prototype, \"length\", {\n    /**\r\n     * @return Length (px)\r\n     */\n    get: function get() {\n      if (this.disabled) {\n        return 0;\n      }\n\n      return this.getPropertyValue(\"length\");\n    },\n\n    /**\r\n     * Length of the tick in pixels.\r\n     *\r\n     * @param value  Length (px)\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"length\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Tick;\n}(Sprite);\n\nexport { Tick };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Tick\"] = Tick;","map":null,"metadata":{},"sourceType":"module"}