{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/fullstack_app/client/src/components/Forms/Signin.js\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport 'bulma/css/bulma.css'; // import Debug from '../../utils/Debug'\n// import * as Yup from \"yup\"\n\nimport axios from \"axios\";\nimport Input from './Input';\nimport { connect } from 'react-redux';\nimport { signedIn, errorCleared } from '../../actions';\n\nconst Signin = ({\n  active,\n  err,\n  signedIn,\n  errorCleared\n}) => {\n  // console.log('active?:' + active)\n  console.log('err?:' + err);\n  return React.createElement(\"div\", {\n    style: {\n      display: active || err ? 'block' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title is-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Signin\"), React.createElement(Formik, {\n    initialValues: {\n      email: 'jasonli@mail.com',\n      password: 'Password1',\n      success: ''\n    },\n    onSubmit: (values, actions) => {\n      errorCleared();\n      axios.post('http://localhost:3001/users/login', values).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          actions.setFieldValue('success', 'Success!');\n          setTimeout(() => {\n            signedIn(res.data);\n          }, 1500);\n        } else {\n          alert(res);\n        }\n      }).catch(err => {\n        if (err.response) {\n          actions.setErrors(err.response.data);\n        } else {\n          alert(err);\n        }\n      });\n      actions.setSubmitting(false);\n    },\n    render: ({\n      values,\n      isSubmitting\n    }) => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"email\",\n      component: Input,\n      type: \"email\",\n      placeholder: \"e.g. jasonli@frontend.io\",\n      icons: {\n        left: 'envelope',\n        right: 'check'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"password\",\n      component: Input,\n      type: \"password\",\n      placeholder: \"hhhhhhhh\",\n      icons: {\n        left: 'key',\n        right: 'check'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button is-link\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Submit\"), (err || values.success) && React.createElement(\"article\", {\n      className: err ? \"message is-danger is-small\" : \"message is-success is-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, err ? 'Please login to view your profile' : values.success))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    active: state.toggles.signin,\n    err: state.err.signin\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signedIn: id => {\n      return dispatch(signedIn(id));\n    },\n    errorCleared: () => {\n      return dispatch(errorCleared());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["/Users/Overseer/Desktop/fullstack_app/client/src/components/Forms/Signin.js"],"names":["React","Formik","Form","Field","axios","Input","connect","signedIn","errorCleared","Signin","active","err","console","log","display","email","password","success","values","actions","post","then","res","status","setFieldValue","setTimeout","data","alert","catch","response","setErrors","setSubmitting","isSubmitting","left","right","mapStateToProps","state","toggles","signin","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field } from 'formik'\nimport 'bulma/css/bulma.css'\n// import Debug from '../../utils/Debug'\n// import * as Yup from \"yup\"\nimport axios from \"axios\"\nimport Input from './Input'\nimport { connect } from 'react-redux'\nimport { signedIn, errorCleared } from '../../actions'\n\nconst Signin = ({ active, err, signedIn, errorCleared }) => {\n    // console.log('active?:' + active)\n    console.log('err?:' + err)\n    return <div style={{ display: (active || err) ? 'block' : 'none' }}>\n        <h1 className=\"title is-4\">Signin</h1>\n        <Formik\n            initialValues={{\n                email: 'jasonli@mail.com',\n                password: 'Password1',\n                success: ''\n            }}\n            onSubmit={(values, actions) => {\n                errorCleared()\n                axios.post('http://localhost:3001/users/login', values).then((res) => {\n                    console.log(res)\n                    if (res.status === 200) {\n                        actions.setFieldValue('success', 'Success!')\n                        setTimeout(() => {\n                            signedIn(res.data)\n                        }, 1500)\n                    } else {\n                        alert(res)\n                    }\n                }).catch((err) => {\n                    if (err.response) {\n                        actions.setErrors(err.response.data)\n                    } else {\n                        alert(err)\n                    }\n                })\n                actions.setSubmitting(false)\n            }\n            }\n\n            render={({ values, isSubmitting }) => (\n                <Form>\n                    <Field name=\"email\" component={Input} type=\"email\" placeholder=\"e.g. jasonli@frontend.io\" icons={{ left: 'envelope', right: 'check' }} />\n                    <Field name=\"password\" component={Input} type=\"password\" placeholder=\"hhhhhhhh\" icons={{ left: 'key', right: 'check' }} />\n                    <button className=\"button is-link\" type=\"submit\" disabled={isSubmitting}>Submit</button>\n                    {(err || values.success) && <article className={err ? \"message is-danger is-small\" : \"message is-success is-small\"}>\n                        <div className=\"message-body\">\n                            {err ? 'Please login to view your profile' : values.success}\n                        </div>\n                    </article>}\n\n                    {/* <Debug /> */}\n                </Form>\n            )}\n        />\n    </div>\n}\n\nconst mapStateToProps = state => {\n    return {\n        active: state.toggles.signin,\n        err: state.err.signin\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signedIn: (id) => { return dispatch(signedIn(id)) },\n        errorCleared: () => { return dispatch(errorCleared()) }\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)"]},"metadata":{},"sourceType":"module"}