{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/fullstack_app/client/src/components/Navbar/NavbarHome/Navbar-container.js\";\nimport NavbarView from '../Navbar-view';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nvar Navbar = function Navbar(_ref) {\n  var active = _ref.active,\n      authenticationError = _ref.authenticationError,\n      toggleSignInButton = _ref.toggleSignInButton,\n      toggleSignUpButton = _ref.toggleSignUpButton,\n      userHasLoggedOut = _ref.userHasLoggedOut,\n      errorCleared = _ref.errorCleared;\n  return React.createElement(NavbarView, {\n    active: active,\n    onProfileClick: function onProfileClick() {\n      return active ? window.location.replace('/profile') : authenticationError();\n    },\n    onSigninClick: function onSigninClick() {\n      errorCleared();\n\n      if (active) {\n        // logout\n        axios.get('http://localhost:3000/users/logout').catch(function (err) {\n          return alert(err);\n        });\n        userHasLoggedOut();\n        return;\n      } else {\n        toggleSignInButton();\n      }\n    },\n    onSignupClick: function onSignupClick() {\n      return toggleSignUpButton();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  });\n};\n\nNavbar.propTypes = {\n  active: PropTypes.bool.isRequired,\n  authenticationError: PropTypes.func.isRequired,\n  toggleSignInButton: PropTypes.func.isRequired,\n  toggleSignUpButton: PropTypes.func.isRequired,\n  userHasLoggedOut: PropTypes.func.isRequired,\n  errorCleared: PropTypes.func.isRequired\n};\nexport default Navbar;","map":{"version":3,"sources":["/Users/Overseer/Desktop/fullstack_app/client/src/components/Navbar/NavbarHome/Navbar-container.js"],"names":["NavbarView","axios","PropTypes","React","Navbar","active","authenticationError","toggleSignInButton","toggleSignUpButton","userHasLoggedOut","errorCleared","window","location","replace","get","catch","err","alert","propTypes","bool","isRequired","func"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,gBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA6G;AAAA,MAA1GC,MAA0G,QAA1GA,MAA0G;AAAA,MAAlGC,mBAAkG,QAAlGA,mBAAkG;AAAA,MAA7EC,kBAA6E,QAA7EA,kBAA6E;AAAA,MAAzDC,kBAAyD,QAAzDA,kBAAyD;AAAA,MAArCC,gBAAqC,QAArCA,gBAAqC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AACxH,SAAO,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEL,MAApB;AACH,IAAA,cAAc,EAAE,0BAAM;AAClB,aAAOA,MAAM,GAAGM,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,UAAxB,CAAH,GACTP,mBAAmB,EADvB;AAEH,KAJE;AAIA,IAAA,aAAa,EAAE,yBAAM;AACpBI,MAAAA,YAAY;;AACZ,UAAIL,MAAJ,EAAY;AACR;AACAJ,QAAAA,KAAK,CAACa,GAAN,CAAU,oCAAV,EAAgDC,KAAhD,CAAsD,UAAAC,GAAG;AAAA,iBAAIC,KAAK,CAACD,GAAD,CAAT;AAAA,SAAzD;AACAP,QAAAA,gBAAgB;AAChB;AACH,OALD,MAKO;AACHF,QAAAA,kBAAkB;AACrB;AACJ,KAdE;AAcA,IAAA,aAAa,EAAE;AAAA,aAAMC,kBAAkB,EAAxB;AAAA,KAdf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAeH,CAhBD;;AAkBAJ,MAAM,CAACc,SAAP,GAAmB;AACfb,EAAAA,MAAM,EAAEH,SAAS,CAACiB,IAAV,CAAeC,UADR;AAEfd,EAAAA,mBAAmB,EAAEJ,SAAS,CAACmB,IAAV,CAAeD,UAFrB;AAGfb,EAAAA,kBAAkB,EAAEL,SAAS,CAACmB,IAAV,CAAeD,UAHpB;AAIfZ,EAAAA,kBAAkB,EAAEN,SAAS,CAACmB,IAAV,CAAeD,UAJpB;AAKfX,EAAAA,gBAAgB,EAAEP,SAAS,CAACmB,IAAV,CAAeD,UALlB;AAMfV,EAAAA,YAAY,EAAER,SAAS,CAACmB,IAAV,CAAeD;AANd,CAAnB;AASA,eAAehB,MAAf","sourcesContent":["import NavbarView from '../Navbar-view'\nimport axios from 'axios'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Navbar = ({ active, authenticationError, toggleSignInButton, toggleSignUpButton, userHasLoggedOut, errorCleared }) => {\n    return <NavbarView active={active}\n        onProfileClick={() => {\n            return active ? window.location.replace('/profile') :\n                authenticationError()\n        }} onSigninClick={() => {\n            errorCleared()\n            if (active) {\n                // logout\n                axios.get('http://localhost:3000/users/logout').catch(err => alert(err))\n                userHasLoggedOut()\n                return\n            } else {\n                toggleSignInButton()\n            }\n        }} onSignupClick={() => toggleSignUpButton()} />\n}\n\nNavbar.propTypes = {\n    active: PropTypes.bool.isRequired,\n    authenticationError: PropTypes.func.isRequired,\n    toggleSignInButton: PropTypes.func.isRequired,\n    toggleSignUpButton: PropTypes.func.isRequired,\n    userHasLoggedOut: PropTypes.func.isRequired,\n    errorCleared: PropTypes.func.isRequired\n}\n\nexport default Navbar\n\n"]},"metadata":{},"sourceType":"module"}