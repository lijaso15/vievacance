{"ast":null,"code":"/**\r\n * Module that defines everything related to building Cone Columns.\r\n * It is a container which has coneColumn element which is a Cone.\r\n */\nimport * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Column } from \"./Column\";\nimport { Cone } from \"../../core/elements/3d/Cone\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Class used to creates ConeColumns.\r\n *\r\n * @see {@link IConeColumnEvents} for a list of available events\r\n * @see {@link IConeColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar ConeColumn =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ConeColumn, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ConeColumn() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"ConeColumn\";\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  ConeColumn.prototype.createAssets = function () {\n    this.coneColumn = this.createChild(Cone);\n    this.coneColumn.shouldClone = false; // some dirty hack so that if user access column, it won't get error\n\n    this.column = this.coneColumn;\n  };\n  /**\r\n   * Copies all parameters from another [[ConeColumn]].\r\n   *\r\n   * @param source Source ConeColumn\r\n   */\n\n\n  ConeColumn.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    if (this.coneColumn) {\n      this.coneColumn.copyFrom(source.coneColumn);\n    }\n  };\n\n  return ConeColumn;\n}(Column);\n\nexport { ConeColumn };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"ConeColumn\"] = ConeColumn;","map":null,"metadata":{},"sourceType":"module"}