{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/vievacance/client/src/components/Cards/Mementos/Memento-view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dots from '../../Slideshow/Dots/Dots-container';\nimport Slideshow from '../../Slideshow';\n\nvar MementoView = function MementoView(_ref) {\n  var owner = _ref.owner,\n      photos = _ref.photos,\n      numPhotos = _ref.numPhotos,\n      title = _ref.title,\n      description = _ref.description,\n      active = _ref.active,\n      onClick = _ref.onClick;\n  return React.createElement(\"div\", {\n    class: \"column is-one-quarter\",\n    style: {\n      borderStyle: 'groove'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    onClick: onClick,\n    id: \"info\",\n    className: \"image container\",\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"http://localhost:5000/photos/\".concat(owner, \"/\").concat(photos[0]),\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Dots, {\n    orientation: {\n      bottom: 0,\n      position: 'absolute',\n      right: '50%'\n    },\n    numSlides: numPhotos,\n    isHorizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      backgroundColor: 'hsl(0, 0%, 96%)'\n    },\n    className: \"subtitle\",\n    href: \"/citypage/\".concat(title.split(',')[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" \", title)), React.createElement(\"div\", {\n    className: \"content is-small\",\n    style: {\n      backgroundColor: 'hsl(0, 0%, 96%)',\n      margin: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, description.length > 150 ? description.slice(150) + '...' : description), React.createElement(\"div\", {\n    className: active ? \"modal is-active\" : \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: onClick,\n    class: \"modal-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Slideshow, {\n    slides: photos.map(function (p) {\n      return {\n        title: '',\n        subtitle: '',\n        image: \"http://localhost:5000/photos/\".concat(owner, \"/\").concat(p)\n      };\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    class: \"modal-card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, description)), React.createElement(\"button\", {\n    onClick: onClick,\n    class: \"modal-close is-large\",\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n};\n\nMementoView.propTypes = {\n  isEmpty: PropTypes.bool.isRequired,\n  owner: PropTypes.string.isRequired\n};\nexport default MementoView;","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/Cards/Mementos/Memento-view.js"],"names":["React","PropTypes","Dots","Slideshow","MementoView","owner","photos","numPhotos","title","description","active","onClick","borderStyle","width","bottom","position","right","top","left","backgroundColor","split","margin","length","slice","map","p","subtitle","image","propTypes","isEmpty","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Dots from '../../Slideshow/Dots/Dots-container'\nimport Slideshow from '../../Slideshow'\n\nconst MementoView = ({ owner, photos, numPhotos, title, description, active, onClick }) => {\n\n    return <div class=\"column is-one-quarter\"\n        style={{\n            borderStyle: 'groove'\n        }}\n    >\n        <figure onClick={onClick} id=\"info\" className=\"image container\" style={{ width: '100%' }}>\n            <img\n                src={`http://localhost:5000/photos/${owner}/${photos[0]}`} alt=\"\" />\n            <Dots orientation={{\n                bottom: 0,\n                position: 'absolute',\n                right: '50%'\n            }} numSlides={numPhotos}\n                isHorizontal\n            />\n            <a style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                backgroundColor: 'hsl(0, 0%, 96%)'\n            }} className=\"subtitle\"\n                href={`/citypage/${title.split(',')[0]}`}\n            > {title}</a>\n        </figure>\n        <div className=\"content is-small\" style={{\n            backgroundColor: 'hsl(0, 0%, 96%)',\n            margin: 0\n        }}>\n            {description.length > 150 ? description.slice(150) + '...' : description}\n        </div>\n        <div className={active ? \"modal is-active\" : \"modal\"}>\n            <div onClick={onClick} class=\"modal-background\"></div>\n            <div class=\"modal-content\">\n                <Slideshow slides={photos.map(p => {\n                    return {\n                        title: '',\n                        subtitle: '',\n                        image: `http://localhost:5000/photos/${owner}/${p}`\n                    }\n                })} />\n                <section class=\"modal-card-body\">\n                    {description}\n                </section>\n\n\n            </div>\n            <button onClick={onClick} class=\"modal-close is-large\" aria-label=\"close\"></button>\n        </div>\n\n    </div>\n}\n\nMementoView.propTypes = {\n    isEmpty: PropTypes.bool.isRequired,\n    owner: PropTypes.string.isRequired\n}\n\nexport default MementoView"]},"metadata":{},"sourceType":"module"}