{"ast":null,"code":"/**\r\n * DateAxisBreak includes functionality to add breaks on a [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n */\nimport * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { ValueAxisBreak } from \"./ValueAxisBreak\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Class used to define breaks for [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n *\r\n * @see {@link IDateAxisBreakEvents} for a list of available events\r\n * @see {@link IDateAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar DateAxisBreak =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(DateAxisBreak, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function DateAxisBreak() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"DateAxisBreak\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(DateAxisBreak.prototype, \"startDate\", {\n    /**\r\n     * @return Start date\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"startDate\");\n    },\n\n    /**\r\n     * Starting date for the break.\r\n     *\r\n     * @param value Start date\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"startDate\", value)) {\n        this.startValue = value.getTime();\n\n        if (this.axis) {\n          this.axis.invalidate();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateAxisBreak.prototype, \"endDate\", {\n    /**\r\n     * @return End date\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"endDate\");\n    },\n\n    /**\r\n     * Ending date for the break.\r\n     *\r\n     * @param value End date\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"endDate\", value)) {\n        this.endValue = value.getTime();\n\n        if (this.axis) {\n          this.axis.invalidate();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return DateAxisBreak;\n}(ValueAxisBreak);\n\nexport { DateAxisBreak };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"DateAxisBreak\"] = DateAxisBreak;","map":null,"metadata":{},"sourceType":"module"}