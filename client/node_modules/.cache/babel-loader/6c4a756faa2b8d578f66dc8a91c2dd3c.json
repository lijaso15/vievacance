{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/fullstack_app/client/src/components/Forms/Signup.js\";\n// Render Prop\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport 'bulma/css/bulma.css';\nimport Debug from '../../utils/Debug';\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport Input from './Input';\nconst SignupSchema = Yup.object().shape({\n  username: Yup.string().min(6, 'username must be at least 6 characters').max(24, 'username cannot be greater than 20 characters').required('username is required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(6, 'password must be at least 6 characters').max(20, 'password cannot be greater than 20 characters').matches(/^(?=.*[a-z])/g, 'The password must contain at least 1 lowercase alphabetical character').matches(/^(?=.*[A-Z])/g, 'The password must contain at least 1 uppercase alphabetical character').matches(/^(?=.*[0-9])/g, 'The password must contain at least 1 numeric character').required('Required')\n});\n\nconst Signup = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title is-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Signup\"), React.createElement(Formik, {\n    initialValues: {\n      username: 'Jasonli',\n      email: 'jasonli@mail.com',\n      password: 'Password1',\n      success: ''\n    },\n    initialStatus: {},\n    validationSchema: SignupSchema,\n    onSubmit: (values, actions) => {\n      // console.log(values)\n      // console.log(actions)\n      axios.post('http://localhost:3001/api/users', values).then(res => {\n        // console.log(res)\n        if (res.status === 200) {} else {\n          alert(res);\n        }\n      }).catch(err => {\n        if (err.response) {\n          actions.setStatus(err.response.data);\n        } else {\n          alert(err);\n        }\n      });\n      actions.setSubmitting(false);\n    },\n    render: ({\n      isSubmitting\n    }) => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"username\",\n      component: Input,\n      type: \"text\",\n      placeholder: \"e.g. jellydonuts\",\n      icons: {\n        left: 'user',\n        right: 'check'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"email\",\n      component: Input,\n      type: \"email\",\n      placeholder: \"e.g. jasonli@frontend.io\",\n      icons: {\n        left: 'envelope',\n        right: 'check'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"password\",\n      component: Input,\n      type: \"password\",\n      placeholder: \"hhhhhhhh\",\n      icons: {\n        left: 'key',\n        right: 'check'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button is-link\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Submit\"), status.success ? React.createElement(\"article\", {\n      className: \"message is-success is-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Success. Thank you for signing up!\")) : null, React.createElement(Debug, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/Overseer/Desktop/fullstack_app/client/src/components/Forms/Signup.js"],"names":["React","Formik","Form","Field","ErrorMessage","Debug","Yup","axios","Input","SignupSchema","object","shape","username","string","min","max","required","email","password","matches","Signup","success","values","actions","post","then","res","status","alert","catch","err","response","setStatus","data","setSubmitting","isSubmitting","left","right"],"mappings":"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","sourcesContent":["// Render Prop\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport 'bulma/css/bulma.css'\nimport Debug from '../../utils/Debug'\nimport * as Yup from \"yup\"\nimport axios from \"axios\"\nimport Input from './Input'\n\n\n\n\nconst SignupSchema = Yup.object().shape({\n    username: Yup.string()\n        .min(6, 'username must be at least 6 characters')\n        .max(24, 'username cannot be greater than 20 characters')\n        .required('username is required'),\n    email: Yup.string()\n        .email('Invalid email')\n        .required('Required'),\n    password: Yup.string()\n        .min(6, 'password must be at least 6 characters')\n        .max(20, 'password cannot be greater than 20 characters')\n        .matches(/^(?=.*[a-z])/g, 'The password must contain at least 1 lowercase alphabetical character')\n        .matches(/^(?=.*[A-Z])/g, 'The password must contain at least 1 uppercase alphabetical character')\n        .matches(/^(?=.*[0-9])/g, 'The password must contain at least 1 numeric character')\n        .required('Required')\n});\n\n\nconst Signup = () => {\n    return <div>\n        <h1 className=\"title is-4\">Signup</h1>\n        <Formik\n            initialValues={{\n                username: 'Jasonli',\n                email: 'jasonli@mail.com',\n                password: 'Password1',\n                success: ''\n            }}\n            initialStatus={{}}\n            validationSchema={SignupSchema}\n            onSubmit={(values, actions) => {\n                // console.log(values)\n                // console.log(actions)\n\n                axios.post('http://localhost:3001/api/users', values).then((res) => {\n                    // console.log(res)\n                    if (res.status === 200) {\n                    } else {\n                        alert(res)\n                    }\n                }).catch((err) => {\n                    if (err.response) {\n                        actions.setStatus(err.response.data)\n                    } else {\n                        alert(err)\n                    }\n                })\n                actions.setSubmitting(false)\n            }\n            }\n            render={({ isSubmitting }) => (\n                <Form>\n                    <Field name=\"username\" component={Input} type=\"text\" placeholder=\"e.g. jellydonuts\" icons={{ left: 'user', right: 'check' }} />\n                    <Field name=\"email\" component={Input} type=\"email\" placeholder=\"e.g. jasonli@frontend.io\" icons={{ left: 'envelope', right: 'check' }} />\n                    <Field name=\"password\" component={Input} type=\"password\" placeholder=\"hhhhhhhh\" icons={{ left: 'key', right: 'check' }} />\n                    <button className=\"button is-link\" type=\"submit\" disabled={isSubmitting}>Submit</button>\n                    {status.success ? <article className=\"message is-success is-small\">\n                        <div className=\"message-body\">\n                            Success. Thank you for signing up!\n                    </div>\n                    </article> : null}\n                    <Debug />\n                </Form>\n            )}\n\n        />\n    </div>\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}