{"ast":null,"code":"/**\r\n * 3D Pie chart module.\r\n */\nimport * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { PieChart, PieChartDataItem } from \"./PieChart\";\nimport { PieSeries3D } from \"../series/PieSeries3D\";\nimport { registry } from \"../../core/Registry\";\nimport * as $math from \"../../core/utils/Math\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[PieChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar PieChart3DDataItem =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PieChart3DDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function PieChart3DDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"PieChart3DDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  return PieChart3DDataItem;\n}(PieChartDataItem);\n\nexport { PieChart3DDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a 3D Pie chart.\r\n *\r\n *  * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"Pie3DChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"Pie3DSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"Pie3DChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChart3DEvents} for a list of available Events\r\n * @see {@link IPieChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\n\nvar PieChart3D =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PieChart3D, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function PieChart3D() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"PieChart3D\";\n    _this.depth = 20;\n    _this.angle = 10; // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(PieChart3D.prototype, \"depth\", {\n    /**\r\n     * @return Depth (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"depth\");\n    },\n\n    /**\r\n     * Depth of the 3D pie in pixels.\r\n     *\r\n     * This will determine \"height\" of the pie.\r\n     *\r\n     * @default 20\r\n     * @param value  Depth (px)\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"depth\", value)) {\n        this.invalidateDataUsers();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieChart3D.prototype, \"angle\", {\n    /**\r\n     * @return Angle (degrees)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"angle\");\n    },\n\n    /**\r\n     * An angle of a \"point of view\" in degrees. Possible range 0 - 90.\r\n     *\r\n     * @default 10\r\n     * @param value  Angle (degrees)\r\n     */\n    set: function (value) {\n      value = $math.fitToRange(value, 0, 90);\n\n      if (this.setPropertyValue(\"angle\", value)) {\n        this.invalidateDataUsers();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates and returns a new Series.\r\n   *\r\n   * @return New series\r\n   */\n\n  PieChart3D.prototype.createSeries = function () {\n    return new PieSeries3D();\n  };\n\n  return PieChart3D;\n}(PieChart);\n\nexport { PieChart3D };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"PieChart3D\"] = PieChart3D;","map":null,"metadata":{},"sourceType":"module"}