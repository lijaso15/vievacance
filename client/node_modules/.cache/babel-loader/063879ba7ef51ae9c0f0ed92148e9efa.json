{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/vievacance/client/src/components/ChangeSettings/ChangeSettings-view.js\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport Input from '../Forms/Input';\nimport PropTypes from 'prop-types';\nimport equalTo from '../../utils/equalTo';\nimport './ChangeSettings.css';\nimport PhotoCards from '../Cards/PhotoCards';\nYup.addMethod(Yup.string, 'equalTo', equalTo);\nvar ChangeUsernameSchema = Yup.object().shape({\n  'new username:': Yup.string().min(6, 'username must be at least 6 characters').max(24, 'username cannot be greater than 20 characters').required('username is required')\n});\nvar ChangePasswordSchema = Yup.object().shape({\n  'new password:': Yup.string().min(6, 'password must be at least 6 characters').max(20, 'password cannot be greater than 20 characters').matches(/^(?=.*[a-z])/g, 'The password must contain at least 1 lowercase alphabetical character').matches(/^(?=.*[A-Z])/g, 'The password must contain at least 1 uppercase alphabetical character').matches(/^(?=.*[0-9])/g, 'The password must contain at least 1 numeric character').required('Required'),\n  'confirm password:': Yup.string().equalTo(Yup.ref('new password:'), 'Passwords must match').required('Required')\n});\n\nvar ChangeSettingsView = function ChangeSettingsView(_ref) {\n  var email = _ref.email,\n      username = _ref.username,\n      _id = _ref._id;\n  return React.createElement(\"div\", {\n    id: \"changeSettings\",\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Email: \"), React.createElement(\"span\", {\n    className: \"subtitle is-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" \", email, \" \")), React.createElement(\"div\", {\n    id: \"info\",\n    className: \"columns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column is-one-third\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      'new username:': '',\n      success: ''\n    },\n    validationSchema: ChangeUsernameSchema,\n    onSubmit: function onSubmit(values, actions) {\n      axios.post(\"/users/changeusername/\".concat(_id), values).then(function (res) {\n        if (res.status === 200) {\n          actions.setFieldValue('success', \"Success! Your username has been changed to \".concat(values['new username:']));\n        } else {\n          alert(res);\n        }\n      }).catch(function (err) {\n        if (err.response) {\n          actions.setErrors(err.response.data);\n        } else {\n          alert(err);\n        }\n      });\n      actions.setSubmitting(false);\n    },\n    render: function render(_ref2) {\n      var values = _ref2.values,\n          isSubmitting = _ref2.isSubmitting;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"new username:\",\n        component: Input,\n        type: \"text\",\n        placeholder: username,\n        icons: {\n          left: 'user',\n          right: 'check'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button is-link\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Change Username\"), values.success && React.createElement(\"article\", {\n        className: \"message is-success is-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, values.success)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"column is-one-third\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      'new password:': '',\n      'confirm password:': '',\n      success: ''\n    },\n    validationSchema: ChangePasswordSchema,\n    onSubmit: function onSubmit(values, actions) {\n      console.log(values);\n      axios.post(\"/users/changepassword/\".concat(_id), values).then(function (res) {\n        if (res.status === 200) {\n          actions.setFieldValue('success', \"Success! Your password has been changed!\");\n        } else {\n          alert(res);\n        }\n      }).catch(function (err) {\n        if (err.response) {\n          console.log(err);\n          actions.setErrors({\n            'new password:': 'An error has occurred. Please try again later'\n          });\n        } else {\n          alert(err);\n        }\n      });\n    },\n    render: function render(_ref3) {\n      var values = _ref3.values,\n          isSubmitting = _ref3.isSubmitting;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"new password:\",\n        component: Input,\n        type: \"password\",\n        placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n        icons: {\n          left: 'key',\n          right: 'check'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"confirm password:\",\n        component: Input,\n        type: \"password\",\n        placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n        icons: {\n          left: 'key',\n          right: 'check'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button is-link\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Change Password\"), values.success && React.createElement(\"article\", {\n        className: \"message is-success is-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, values.success)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))), React.createElement(\"form\", {\n    id: \"info\",\n    action: \"/photos/\".concat(_id),\n    method: \"post\",\n    enctype: \"multipart/form-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    name: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    value: \"upload picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(PhotoCards, {\n    owner: _id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }));\n};\n\nChangeSettingsView.propTypes = {\n  email: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  _id: PropTypes.string.isRequired\n};\nexport default ChangeSettingsView;","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/ChangeSettings/ChangeSettings-view.js"],"names":["React","Formik","Form","Field","Yup","axios","Input","PropTypes","equalTo","PhotoCards","addMethod","string","ChangeUsernameSchema","object","shape","min","max","required","ChangePasswordSchema","matches","ref","ChangeSettingsView","email","username","_id","success","values","actions","post","then","res","status","setFieldValue","alert","catch","err","response","setErrors","data","setSubmitting","isSubmitting","left","right","console","log","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field } from 'formik'\nimport * as Yup from \"yup\"\nimport axios from \"axios\"\nimport Input from '../Forms/Input'\nimport PropTypes from 'prop-types'\nimport equalTo from '../../utils/equalTo'\nimport './ChangeSettings.css'\nimport PhotoCards from '../Cards/PhotoCards';\n\nYup.addMethod(Yup.string, 'equalTo', equalTo);\n\nconst ChangeUsernameSchema = Yup.object().shape({\n    'new username:': Yup.string()\n        .min(6, 'username must be at least 6 characters')\n        .max(24, 'username cannot be greater than 20 characters')\n        .required('username is required')\n})\n\nconst ChangePasswordSchema = Yup.object().shape({\n    'new password:': Yup.string()\n        .min(6, 'password must be at least 6 characters')\n        .max(20, 'password cannot be greater than 20 characters')\n        .matches(/^(?=.*[a-z])/g, 'The password must contain at least 1 lowercase alphabetical character')\n        .matches(/^(?=.*[A-Z])/g, 'The password must contain at least 1 uppercase alphabetical character')\n        .matches(/^(?=.*[0-9])/g, 'The password must contain at least 1 numeric character')\n        .required('Required'),\n    'confirm password:': Yup.string()\n        .equalTo(Yup.ref('new password:'), 'Passwords must match')\n        .required('Required')\n});\n\n\nconst ChangeSettingsView = ({ email, username, _id }) => {\n    return <div id=\"changeSettings\" className=\"column\">\n        <div id=\"info\">\n            <b> Email: </b>\n            <span className=\"subtitle is-link\"> {email} </span>\n\n        </div>\n\n        <div id=\"info\" className=\"columns\">\n            <div className=\"column is-one-third\">\n                <Formik\n                    initialValues={{\n                        'new username:': '',\n                        success: ''\n                    }}\n                    validationSchema={ChangeUsernameSchema}\n                    onSubmit={(values, actions) => {\n                        axios.post(`/users/changeusername/${_id}`, values).then(res => {\n                            if (res.status === 200) {\n                                actions.setFieldValue('success', `Success! Your username has been changed to ${values['new username:']}`)\n                            } else {\n                                alert(res)\n                            }\n                        }).catch(err => {\n                            if (err.response) {\n                                actions.setErrors(err.response.data)\n                            } else {\n                                alert(err)\n                            }\n                        })\n                        actions.setSubmitting(false)\n                    }}\n                    render={({ values, isSubmitting }) => (\n                        <Form>\n                            <Field name=\"new username:\" component={Input} type=\"text\" placeholder={username} icons={{ left: 'user', right: 'check' }} />\n                            <button className=\"button is-link\" type=\"submit\" disabled={isSubmitting}>Change Username</button>\n                            {values.success && <article className=\"message is-success is-small\">\n                                <div className=\"message-body\">\n                                    {values.success}\n                                </div>\n                            </article>}\n                        </Form>\n                    )}\n                />\n            </div>\n            <div className=\"column is-one-third\">\n                <Formik\n                    initialValues={{\n                        'new password:': '',\n                        'confirm password:': '',\n                        success: ''\n                    }}\n                    validationSchema={ChangePasswordSchema}\n                    onSubmit={(values, actions) => {\n                        console.log(values)\n                        axios.post(`/users/changepassword/${_id}`, values).then(res => {\n                            if (res.status === 200) {\n                                actions.setFieldValue('success', `Success! Your password has been changed!`)\n                            } else {\n                                alert(res)\n                            }\n                        }).catch(err => {\n                            if (err.response) {\n                                console.log(err)\n                                actions.setErrors({ 'new password:': 'An error has occurred. Please try again later' })\n                            } else {\n                                alert(err)\n                            }\n                        })\n                    }}\n                    render={({ values, isSubmitting }) => (\n                        <Form>\n                            <Field name=\"new password:\" component={Input} type=\"password\" placeholder=\"•••••••\" icons={{ left: 'key', right: 'check' }} />\n                            <Field name=\"confirm password:\" component={Input} type=\"password\" placeholder=\"•••••••\" icons={{ left: 'key', right: 'check' }} />\n                            <button className=\"button is-link\" type=\"submit\" disabled={isSubmitting}>Change Password</button>\n                            {values.success && <article className=\"message is-success is-small\">\n                                <div className=\"message-body\">\n                                    {values.success}\n                                </div>\n                            </article>}\n                        </Form>\n                    )}\n                />\n            </div>\n        </div>\n        <form id=\"info\" action={`/photos/${_id}`} method=\"post\" enctype=\"multipart/form-data\">\n            <input type=\"file\" name=\"avatar\" />\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"upload picture\" />\n        </form>\n        <PhotoCards owner={_id} />\n    </div>\n}\n\n\nChangeSettingsView.propTypes = {\n    email: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired\n}\n\nexport default ChangeSettingsView"]},"metadata":{},"sourceType":"module"}