{"ast":null,"code":"import _objectWithoutProperties from \"/Users/Overseer/Desktop/fullstack_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/Overseer/Desktop/fullstack_app/client/src/components/Forms/Input/Input.js\";\nexport default Input = (_ref) => {\n  let field = _ref.field,\n      _ref$form = _ref.form,\n      touched = _ref$form.touched,\n      errors = _ref$form.errors,\n      props = _objectWithoutProperties(_ref, [\"field\", \"form\"]);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, field, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })), touched[field.name] && errors[field.name] && React.createElement(\"div\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, errors[field.name]));\n};","map":{"version":3,"sources":["/Users/Overseer/Desktop/fullstack_app/client/src/components/Forms/Input/Input.js"],"names":["Input","field","form","touched","errors","props","name"],"mappings":";;AAEA,eAAeA,KAAK,GAAG;AAAA,MACnBC,KADmB,QACnBA,KADmB;AAAA,uBAEnBC,IAFmB;AAAA,MAEXC,OAFW,aAEXA,OAFW;AAAA,MAEFC,MAFE,aAEFA,MAFE;AAAA,MAGhBC,KAHgB;;AAAA,SAKf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC;AAAZ,KAAuBJ,KAAvB,EAAkCI,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAEKF,OAAO,CAACF,KAAK,CAACK,IAAP,CAAP,IACGF,MAAM,CAACH,KAAK,CAACK,IAAP,CADT,IACyB;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,MAAM,CAACH,KAAK,CAACK,IAAP,CAA9B,CAH9B,CALe;AAAA,CAAvB","sourcesContent":["\n\nexport default Input = ({\n    field, // { name, value, onChange, onBlur }\n    form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n    ...props\n}) => (\n        <div>\n            <input type=\"text\" {...field} {...props} />\n            {touched[field.name] &&\n                errors[field.name] && <div className=\"error\">{errors[field.name]}</div>}\n        </div>\n    );"]},"metadata":{},"sourceType":"module"}