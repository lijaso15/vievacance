{"ast":null,"code":"import CreateMementos from './CreateMementos-container';\nimport { connect } from 'react-redux';\nimport { setError as _setError } from '../../../actions';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    owner: state.perspective.owner._id,\n    selectedPhotos: state.data.photos.filter(function (p) {\n      return p.active;\n    }),\n    cities: state.data.cities,\n    message: state.err.message\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setError: function setError(label, message) {\n      return dispatch(_setError(label, message));\n    }\n  };\n};\n\nexport default connect(mapDispatchToProps, mapStateToProps)(CreateMementos);","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/ManageMementos/CreateMementos/CreateMementos-redux.js"],"names":["CreateMementos","connect","setError","mapStateToProps","state","owner","perspective","_id","selectedPhotos","data","photos","filter","p","active","cities","message","err","mapDispatchToProps","dispatch","label"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,4BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAQ,IAARA,SAAT,QAAyB,kBAAzB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,WAAN,CAAkBD,KAAlB,CAAwBE,GAD5B;AAEHC,IAAAA,cAAc,EAAEJ,KAAK,CAACK,IAAN,CAAWC,MAAX,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,MAAN;AAAA,KAA1B,CAFb;AAGHC,IAAAA,MAAM,EAAEV,KAAK,CAACK,IAAN,CAAWK,MAHhB;AAIHC,IAAAA,OAAO,EAAEX,KAAK,CAACY,GAAN,CAAUD;AAJhB,GAAP;AAMH,CAPD;;AASA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHhB,IAAAA,QAAQ,EAAE,kBAACiB,KAAD,EAAQJ,OAAR;AAAA,aAAoBG,QAAQ,CAAChB,SAAQ,CAACiB,KAAD,EAAQJ,OAAR,CAAT,CAA5B;AAAA;AADP,GAAP;AAGH,CAJD;;AAQA,eAAed,OAAO,CAACgB,kBAAD,EAAqBd,eAArB,CAAP,CAA6CH,cAA7C,CAAf","sourcesContent":["import CreateMementos from './CreateMementos-container'\nimport { connect } from 'react-redux'\nimport { setError } from '../../../actions'\n\nconst mapStateToProps = state => {\n    return {\n        owner: state.perspective.owner._id,\n        selectedPhotos: state.data.photos.filter(p => p.active),\n        cities: state.data.cities,\n        message: state.err.message\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setError: (label, message) => dispatch(setError(label, message))\n    }\n}\n\n\n\nexport default connect(mapDispatchToProps, mapStateToProps)(CreateMementos) \n"]},"metadata":{},"sourceType":"module"}