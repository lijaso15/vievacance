{"ast":null,"code":"import _objectSpread from \"/Users/Overseer/Desktop/vievacance/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Overseer/Desktop/vievacance/client/src/components/ManageMementos/EditMementos/EditMementos-container.js\";\nimport EditMementosView from './EditMementos-view.js';\nimport axios from 'axios';\nimport React from 'react';\n\nvar EditMementos = function EditMementos(_ref) {\n  var owner = _ref.owner,\n      photos = _ref.photos,\n      title = _ref.title,\n      description = _ref.description,\n      id = _ref.id,\n      profilePicture = _ref.profilePicture,\n      username = _ref.username,\n      onClick = _ref.onClick,\n      loadData = _ref.loadData,\n      selectedPhotos = _ref.selectedPhotos,\n      cities = _ref.cities,\n      _id = _ref._id,\n      setRepeat = _ref.setRepeat,\n      wasCalled = _ref.wasCalled;\n\n  if (!wasCalled) {\n    axios.get(\"/photos/\".concat(owner)).then(function (res) {\n      loadData(res.data.map(function (p) {\n        return photos.includes(p.id) ? _objectSpread({}, p, {\n          active: true\n        }) : p;\n      }), 'PHOTOS');\n    });\n    axios.get(\"/globeData\").then(function (res) {\n      loadData(res.data.map(function (c) {\n        return {\n          city: c.city,\n          country: c.country,\n          active: c.city + ', ' + c.country === title\n        };\n      }), 'CITIES');\n    }).catch(function (err) {\n      return alert(err);\n    });\n    setRepeat('ERR_EDIT');\n  }\n\n  return React.createElement(EditMementosView, {\n    owner: owner,\n    photos: photos,\n    title: title,\n    description: description,\n    editMemento: function editMemento() {\n      var city = cities[document.querySelector('select').selectedIndex - 1].city;\n      var country = cities[document.querySelector('select').selectedIndex - 1].country;\n      var description = document.querySelector('textarea').value;\n      var photos = selectedPhotos.map(function (p) {\n        return p.id;\n      });\n      axios.post(\"/mementos/edit/\".concat(_id), {\n        description: description,\n        photos: photos,\n        city: city,\n        country: country\n      }).then(function (res) {\n        return alert(res.data);\n      }).catch(function (err) {\n        return alert(err);\n      });\n    },\n    id: id,\n    profilePicture: profilePicture,\n    username: username,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n};\n\nexport default EditMementos;","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/ManageMementos/EditMementos/EditMementos-container.js"],"names":["EditMementosView","axios","React","EditMementos","owner","photos","title","description","id","profilePicture","username","onClick","loadData","selectedPhotos","cities","_id","setRepeat","wasCalled","get","then","res","data","map","p","includes","active","c","city","country","catch","err","alert","document","querySelector","selectedIndex","value","post"],"mappings":"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","sourcesContent":["import EditMementosView from './EditMementos-view.js'\nimport axios from 'axios'\nimport React from 'react'\n\nconst EditMementos = ({ owner, photos, title, description, id, profilePicture, username, onClick, loadData, selectedPhotos, cities, _id, setRepeat, wasCalled }) => {\n\n    if (!wasCalled) {\n        axios.get(`/photos/${owner}`).then(res => {\n            loadData(res.data.map(p => {\n                return photos.includes(p.id) ? { ...p, active: true } : p\n            }), 'PHOTOS')\n        })\n        axios.get(`/globeData`).then(res => {\n            loadData(res.data.map(c => {\n                return {\n                    city: c.city,\n                    country: c.country,\n                    active: c.city + ', ' + c.country === title\n                }\n            }), 'CITIES')\n        }).catch(err => alert(err))\n        setRepeat('ERR_EDIT')\n    }\n\n    return <EditMementosView owner={owner} photos={photos} title={title} description={description}\n        editMemento={() => {\n            const city = cities[document.querySelector('select').selectedIndex - 1].city\n            const country = cities[document.querySelector('select').selectedIndex - 1].country\n            const description = document.querySelector('textarea').value\n            const photos = selectedPhotos.map(p => p.id)\n            axios.post(`/mementos/edit/${_id}`, { description, photos, city, country }).then(res => alert(res.data))\n                .catch(err => alert(err))\n        }}\n        id={id} profilePicture={profilePicture} username={username} onClick={onClick} />\n}\n\n\nexport default EditMementos\n"]},"metadata":{},"sourceType":"module"}