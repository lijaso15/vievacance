{"ast":null,"code":"/**\r\n * Module that defines everything related to building OHLCs.\r\n */\nimport * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Candlestick } from \"./Candlestick\";\nimport { Line } from \"../../core/elements/Line\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Class used to creates OHLCs.\r\n *\r\n * @see {@link IOHLCEvents} for a list of available events\r\n * @see {@link IOHLCAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar OHLC =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(OHLC, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function OHLC() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"OHLC\";\n    _this.layout = \"none\";\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  OHLC.prototype.createAssets = function () {\n    //super.createAssets();\n    this.openLine = this.createChild(Line);\n    this.openLine.shouldClone = false;\n    this.highLowLine = this.createChild(Line);\n    this.highLowLine.shouldClone = false;\n    this.closeLine = this.createChild(Line);\n    this.closeLine.shouldClone = false;\n  };\n  /**\r\n   * Copies all parameters from another [[OHLC]].\r\n   *\r\n   * @param source Source OHLC\r\n   */\n\n\n  OHLC.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    if (this.openLine) {\n      this.openLine.copyFrom(source.openLine);\n    }\n\n    if (this.highLowLine) {\n      this.highLowLine.copyFrom(source.highLowLine);\n    }\n\n    if (this.closeLine) {\n      this.closeLine.copyFrom(source.closeLine);\n    }\n  };\n\n  return OHLC;\n}(Candlestick);\n\nexport { OHLC };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"OHLC\"] = OHLC;","map":null,"metadata":{},"sourceType":"module"}