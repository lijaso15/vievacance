{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/vievacance/client/src/routes/Settings/Settings-view.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport NavbarOther from '../../components/Navbar/NavbarOther';\nimport { connect } from 'react-redux';\nimport { setSignedIn as _setSignedIn, setViewer as _setViewer, setOwner as _setOwner, loadData as _loadData } from '../../actions';\nimport Footer from '../../components/Footer';\nimport Drawer from '../../components/Drawer';\nimport ChangeSettings from '../../components/ChangeSettings';\nimport { Redirect } from 'react-router-dom';\n\nvar SettingsView = function SettingsView(_ref) {\n  var setSignedIn = _ref.setSignedIn,\n      setOwner = _ref.setOwner,\n      setViewer = _ref.setViewer,\n      match = _ref.match,\n      loadData = _ref.loadData,\n      access = _ref.access;\n\n  window.onload = function () {\n    function waitForUser(done) {\n      if (done) {\n        setSignedIn(done);\n        setViewer(done);\n        axios.get(\"/users/\".concat(match.params.id)).then(function (res) {\n          setOwner(res.data);\n        }).catch(function (err) {\n          return alert(err);\n        });\n        return;\n      }\n\n      axios.get('/users', {\n        withCredentials: true\n      }).then(function (res) {\n        // setSignedIn(res.data._id)\n        // setViewer(res.data._id)\n        waitForUser(res.data._id);\n      }).catch(function (err) {\n        return alert(err);\n      });\n    }\n\n    waitForUser(false); // match.params.id is the visitor\n    // objective is to compare the visitor with the owner\n\n    axios.get(\"/photos/\".concat(match.params.id)).then(function (res) {\n      loadData(res.data, 'PHOTOS');\n    });\n  };\n\n  if (!access) {\n    return React.createElement(Redirect, {\n      to: \"/homeglobe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(NavbarOther, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"columns\",\n    style: {\n      minHeight: '-webkit-fill-available',\n      paddingTop: '3.25rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    location: \"/settings\",\n    fullAccess: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(ChangeSettings, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"column is-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" \")), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  if (!state.perspective.owner._id) {\n    return {\n      access: true\n    };\n  } else {\n    return {\n      access: state.perspective.viewer === state.perspective.owner._id\n    };\n  }\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setSignedIn: function setSignedIn(id) {\n      return dispatch(_setSignedIn(id));\n    },\n    setOwner: function setOwner(id) {\n      return dispatch(_setOwner(id));\n    },\n    setViewer: function setViewer(id) {\n      return dispatch(_setViewer(id));\n    },\n    loadData: function loadData(id, label) {\n      return dispatch(_loadData(id, label));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsView);","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/routes/Settings/Settings-view.js"],"names":["React","axios","NavbarOther","connect","setSignedIn","setViewer","setOwner","loadData","Footer","Drawer","ChangeSettings","Redirect","SettingsView","match","access","window","onload","waitForUser","done","get","params","id","then","res","data","catch","err","alert","withCredentials","_id","minHeight","paddingTop","mapStateToProps","state","perspective","owner","viewer","mapDispatchToProps","dispatch","label"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport NavbarOther from '../../components/Navbar/NavbarOther'\nimport { connect } from 'react-redux'\nimport { setSignedIn, setViewer, setOwner, loadData } from '../../actions'\nimport Footer from '../../components/Footer'\nimport Drawer from '../../components/Drawer'\nimport ChangeSettings from '../../components/ChangeSettings'\nimport { Redirect } from 'react-router-dom'\n\nconst SettingsView = ({ setSignedIn, setOwner, setViewer, match, loadData, access }) => {\n\n    window.onload = () => {\n        function waitForUser(done) {\n            if (done) {\n                setSignedIn(done)\n                setViewer(done)\n                axios.get(`/users/${match.params.id}`).then(res => {\n                    setOwner(res.data)\n                }).catch(err => alert(err))\n                return\n            }\n            axios.get('/users', { withCredentials: true }).then(res => {\n                // setSignedIn(res.data._id)\n                // setViewer(res.data._id)\n                waitForUser(res.data._id)\n            }).catch(err => alert(err))\n        }\n        waitForUser(false)\n\n        // match.params.id is the visitor\n        // objective is to compare the visitor with the owner\n\n\n        axios.get(`/photos/${match.params.id}`).then(res => {\n            loadData(res.data, 'PHOTOS')\n        })\n    }\n\n    if (!access) {\n        return <Redirect to=\"/homeglobe\" />\n    }\n\n    return (\n        <div>\n            <NavbarOther />\n            <div className='columns'\n                style={{\n                    minHeight: '-webkit-fill-available',\n                    paddingTop: '3.25rem'\n                }}>\n                <Drawer location='/settings' fullAccess />\n                <ChangeSettings />\n                <div className='column is-1'> </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    if (!state.perspective.owner._id) {\n        return {\n            access: true\n        }\n    } else {\n        return {\n            access: (state.perspective.viewer === state.perspective.owner._id)\n        }\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setSignedIn: id => dispatch(setSignedIn(id)),\n        setOwner: id => dispatch(setOwner(id)),\n        setViewer: id => dispatch(setViewer(id)),\n        loadData: (id, label) => dispatch(loadData(id, label))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsView)"]},"metadata":{},"sourceType":"module"}