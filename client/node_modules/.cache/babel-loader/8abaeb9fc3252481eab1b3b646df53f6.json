{"ast":null,"code":"/**\r\n * Bullet module\r\n */\nimport * as tslib_1 from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Bullet } from \"./Bullet\";\nimport { Label } from \"../../core/elements/Label\";\nimport { registry } from \"../../core/Registry\";\nimport { color } from \"../../core/utils/Color\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar LabelBullet =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(LabelBullet, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function LabelBullet() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"LabelBullet\";\n\n    var label = _this.createChild(Label);\n\n    label.shouldClone = false;\n    label.verticalCenter = \"middle\";\n    label.horizontalCenter = \"middle\";\n    label.truncate = true;\n    label.hideOversized = false;\n    label.maxWidth = 500;\n    label.maxHeight = 500;\n    label.stroke = color();\n    label.strokeOpacity = 0;\n    label.fill = new InterfaceColorSet().getFor(\"text\");\n\n    _this.events.on(\"maxsizechanged\", _this.handleMaxSize, _this, false);\n\n    _this.label = label; // not good, as lineSeries will have labels somewhere in the middle.\n    //this.locationX = 0.5;\n    //this.locationY = 0.5;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  LabelBullet.prototype.handleMaxSize = function () {\n    this.label.maxWidth = this.maxWidth;\n    this.label.maxHeight = this.maxHeight;\n  };\n  /**\r\n   * Copies all proprities and related stuff from another instance of\r\n   * [[LabelBullet]].\r\n   *\r\n   * @param source  Source element\r\n   */\n\n\n  LabelBullet.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    this.label.copyFrom(source.label);\n  };\n\n  return LabelBullet;\n}(Bullet);\n\nexport { LabelBullet };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"LabelBullet\"] = LabelBullet;","map":null,"metadata":{},"sourceType":"module"}