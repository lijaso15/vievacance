{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/fullstack_app/client/src/components/Navbar/Navbar-container.js\";\nimport NavbarView from './Navbar-view';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Navbar = ({\n  active,\n  authenticationError,\n  toggleSignInButton,\n  toggleSignUpButton,\n  userHasLoggedOut\n}) => {\n  return React.createElement(NavbarView, {\n    active: active,\n    onProfileClick: () => {\n      return active ? React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }) : authenticationError();\n    },\n    onSigninClick: () => {\n      if (active) {\n        // logout\n        axios.get('http://localhost:3001/users/logout').catch(err => alert(err));\n        userHasLoggedOut();\n        return;\n      } else {\n        toggleSignInButton();\n      }\n    },\n    onSignupClick: () => toggleSignUpButton(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n};\n\nNavbar.propTypes = {\n  active: PropTypes.bool.isRequired,\n  authenticationError: PropTypes.func.isRequired,\n  toggleSignInButton: PropTypes.func.isRequired,\n  toggleSignUpButton: PropTypes.func.isRequired,\n  userHasLoggedOut: PropTypes.func.isRequired\n};\nexport default Navbar;","map":{"version":3,"sources":["/Users/Overseer/Desktop/fullstack_app/client/src/components/Navbar/Navbar-container.js"],"names":["NavbarView","axios","Redirect","PropTypes","React","Navbar","active","authenticationError","toggleSignInButton","toggleSignUpButton","userHasLoggedOut","get","catch","err","alert","propTypes","bool","isRequired","func"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,mBAAV;AAA+BC,EAAAA,kBAA/B;AAAmDC,EAAAA,kBAAnD;AAAuEC,EAAAA;AAAvE,CAAD,KAA+F;AAC1G,SAAO,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEJ,MAApB;AACH,IAAA,cAAc,EAAE,MAAM;AAClB,aAAOA,MAAM,GAAG,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GACTC,mBAAmB,EADvB;AAEH,KAJE;AAIA,IAAA,aAAa,EAAE,MAAM;AACpB,UAAID,MAAJ,EAAY;AACR;AACAL,QAAAA,KAAK,CAACU,GAAN,CAAU,oCAAV,EAAgDC,KAAhD,CAAsDC,GAAG,IAAIC,KAAK,CAACD,GAAD,CAAlE;AACAH,QAAAA,gBAAgB;AAChB;AACH,OALD,MAKO;AACHF,QAAAA,kBAAkB;AACrB;AACJ,KAbE;AAaA,IAAA,aAAa,EAAE,MAAMC,kBAAkB,EAbvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAcH,CAfD;;AAiBAJ,MAAM,CAACU,SAAP,GAAmB;AACfT,EAAAA,MAAM,EAAEH,SAAS,CAACa,IAAV,CAAeC,UADR;AAEfV,EAAAA,mBAAmB,EAAEJ,SAAS,CAACe,IAAV,CAAeD,UAFrB;AAGfT,EAAAA,kBAAkB,EAAEL,SAAS,CAACe,IAAV,CAAeD,UAHpB;AAIfR,EAAAA,kBAAkB,EAAEN,SAAS,CAACe,IAAV,CAAeD,UAJpB;AAKfP,EAAAA,gBAAgB,EAAEP,SAAS,CAACe,IAAV,CAAeD;AALlB,CAAnB;AAQA,eAAeZ,MAAf","sourcesContent":["import NavbarView from './Navbar-view'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Navbar = ({ active, authenticationError, toggleSignInButton, toggleSignUpButton, userHasLoggedOut }) => {\n    return <NavbarView active={active}\n        onProfileClick={() => {\n            return active ? <Redirect to=\"/profile\" /> :\n                authenticationError()\n        }} onSigninClick={() => {\n            if (active) {\n                // logout\n                axios.get('http://localhost:3001/users/logout').catch(err => alert(err))\n                userHasLoggedOut()\n                return\n            } else {\n                toggleSignInButton()\n            }\n        }} onSignupClick={() => toggleSignUpButton()} />\n}\n\nNavbar.propTypes = {\n    active: PropTypes.bool.isRequired,\n    authenticationError: PropTypes.func.isRequired,\n    toggleSignInButton: PropTypes.func.isRequired,\n    toggleSignUpButton: PropTypes.func.isRequired,\n    userHasLoggedOut: PropTypes.func.isRequired\n}\n\nexport default Navbar\n\n"]},"metadata":{},"sourceType":"module"}