{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/vievacance/client/src/components/Navbar/NavbarOther/index.js\";\nimport Navbar from '../Navbar-view';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport React from 'react';\nimport { setSignedIn as _setSignedIn, authenticationError as _authenticationError } from '../../../actions';\nimport logout from '../../../utils/logout';\n\nvar NavbarOther = function NavbarOther(_ref) {\n  var authenticationError = _ref.authenticationError,\n      active = _ref.active,\n      setSignedIn = _ref.setSignedIn,\n      viewer = _ref.viewer;\n  return React.createElement(Navbar, {\n    active: active,\n    onSignupClick: function onSignupClick() {\n      return window.location.replace('/homeglobe');\n    },\n    onSigninClick: function onSigninClick() {\n      if (active) {\n        setSignedIn(false);\n        logout(false);\n        return;\n      } else {\n        return window.location.replace('/homeglobe');\n      }\n    },\n    onProfileClick: function onProfileClick() {\n      if (active) {\n        return window.location.replace('/profile/' + viewer);\n      } else {\n        authenticationError();\n        return window.location.replace('/homeglobe');\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    active: state.toggles.navbar,\n    viewer: state.perspective.viewer ? state.perspective.viewer : ''\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    authenticationError: function authenticationError() {\n      return dispatch(_authenticationError());\n    },\n    setSignedIn: function setSignedIn(id) {\n      return dispatch(_setSignedIn(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarOther);","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/Navbar/NavbarOther/index.js"],"names":["Navbar","connect","axios","React","setSignedIn","authenticationError","logout","NavbarOther","active","viewer","window","location","replace","mapStateToProps","state","toggles","navbar","perspective","mapDispatchToProps","dispatch","id"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAW,IAAXA,YAAT,EAAsBC,mBAAmB,IAAnBA,oBAAtB,QAAiD,kBAAjD;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA0D;AAAA,MAAvDF,mBAAuD,QAAvDA,mBAAuD;AAAA,MAAlCG,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BJ,WAA0B,QAA1BA,WAA0B;AAAA,MAAbK,MAAa,QAAbA,MAAa;AAE1E,SAAO,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAED,MAAhB;AAAwB,IAAA,aAAa,EAAE,yBAAM;AAChD,aAAOE,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,YAAxB,CAAP;AACH,KAFM;AAEJ,IAAA,aAAa,EAAE,yBAAM;AACpB,UAAIJ,MAAJ,EAAY;AACRJ,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,QAAAA,MAAM,CAAC,KAAD,CAAN;AACA;AACH,OAJD,MAIO;AACH,eAAOI,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,YAAxB,CAAP;AACH;AACJ,KAVM;AAUJ,IAAA,cAAc,EAAE,0BAAM;AACrB,UAAIJ,MAAJ,EAAY;AACR,eAAOE,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,cAAcH,MAAtC,CAAP;AACH,OAFD,MAEO;AACHJ,QAAAA,mBAAmB;AACnB,eAAOK,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,YAAxB,CAAP;AACH;AACJ,KAjBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAkBH,CApBD;;AAsBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHN,IAAAA,MAAM,EAAEM,KAAK,CAACC,OAAN,CAAcC,MADnB;AAEHP,IAAAA,MAAM,EAAEK,KAAK,CAACG,WAAN,CAAkBR,MAAlB,GAA2BK,KAAK,CAACG,WAAN,CAAkBR,MAA7C,GAAsD;AAF3D,GAAP;AAIH,CALD;;AAOA,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHd,IAAAA,mBAAmB,EAAE;AAAA,aAAMc,QAAQ,CAACd,oBAAmB,EAApB,CAAd;AAAA,KADlB;AAEHD,IAAAA,WAAW,EAAE,qBAACgB,EAAD;AAAA,aAAQD,QAAQ,CAACf,YAAW,CAACgB,EAAD,CAAZ,CAAhB;AAAA;AAFV,GAAP;AAIH,CALD;;AAQA,eAAenB,OAAO,CAACY,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CX,WAA7C,CAAf","sourcesContent":["import Navbar from '../Navbar-view'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport React from 'react'\nimport { setSignedIn, authenticationError } from '../../../actions'\nimport logout from '../../../utils/logout'\n\nconst NavbarOther = ({ authenticationError, active, setSignedIn, viewer }) => {\n\n    return <Navbar active={active} onSignupClick={() => {\n        return window.location.replace('/homeglobe')\n    }} onSigninClick={() => {\n        if (active) {\n            setSignedIn(false)\n            logout(false)\n            return\n        } else {\n            return window.location.replace('/homeglobe')\n        }\n    }} onProfileClick={() => {\n        if (active) {\n            return window.location.replace('/profile/' + viewer)\n        } else {\n            authenticationError()\n            return window.location.replace('/homeglobe')\n        }\n    }} />\n}\n\nconst mapStateToProps = state => {\n    return {\n        active: state.toggles.navbar,\n        viewer: state.perspective.viewer ? state.perspective.viewer : ''\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authenticationError: () => dispatch(authenticationError()),\n        setSignedIn: (id) => dispatch(setSignedIn(id))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarOther)"]},"metadata":{},"sourceType":"module"}