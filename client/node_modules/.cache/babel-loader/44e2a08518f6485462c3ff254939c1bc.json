{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/vievacance/client/src/components/Navbar/NavbarHome/Navbar-container.js\";\nimport NavbarView from '../Navbar-view';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nvar Navbar = function Navbar(_ref) {\n  var active = _ref.active,\n      authenticationError = _ref.authenticationError,\n      toggleSignInButton = _ref.toggleSignInButton,\n      toggleSignUpButton = _ref.toggleSignUpButton,\n      setSignedIn = _ref.setSignedIn,\n      errorCleared = _ref.errorCleared,\n      viewer = _ref.viewer;\n  console.log(viewer);\n  return React.createElement(NavbarView, {\n    active: active,\n    onProfileClick: function onProfileClick() {\n      return active ? window.location.replace('/profile/' + viewer) : authenticationError();\n    },\n    onSigninClick: function onSigninClick() {\n      if (active) {\n        // logout\n        axios.get('/users/logout').catch(function (err) {\n          return alert(err);\n        });\n        setSignedIn(false);\n        return;\n      } else {\n        errorCleared();\n        toggleSignInButton();\n      }\n    },\n    onSignupClick: function onSignupClick() {\n      return toggleSignUpButton();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n};\n\nNavbar.propTypes = {\n  active: PropTypes.bool.isRequired,\n  authenticationError: PropTypes.func.isRequired,\n  toggleSignInButton: PropTypes.func.isRequired,\n  toggleSignUpButton: PropTypes.func.isRequired,\n  setSignedIn: PropTypes.func.isRequired,\n  errorCleared: PropTypes.func.isRequired,\n  viewer: PropTypes.string.isRequired\n};\nexport default Navbar;","map":{"version":3,"sources":["/Users/Overseer/Desktop/vievacance/client/src/components/Navbar/NavbarHome/Navbar-container.js"],"names":["NavbarView","axios","PropTypes","React","Navbar","active","authenticationError","toggleSignInButton","toggleSignUpButton","setSignedIn","errorCleared","viewer","console","log","window","location","replace","get","catch","err","alert","propTypes","bool","isRequired","func","string"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,gBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAgH;AAAA,MAA7GC,MAA6G,QAA7GA,MAA6G;AAAA,MAArGC,mBAAqG,QAArGA,mBAAqG;AAAA,MAAhFC,kBAAgF,QAAhFA,kBAAgF;AAAA,MAA5DC,kBAA4D,QAA5DA,kBAA4D;AAAA,MAAxCC,WAAwC,QAAxCA,WAAwC;AAAA,MAA3BC,YAA2B,QAA3BA,YAA2B;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC3HC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAO,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEN,MAApB;AACH,IAAA,cAAc,EAAE,0BAAM;AAClB,aAAOA,MAAM,GAAGS,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,cAAcL,MAAtC,CAAH,GACTL,mBAAmB,EADvB;AAEH,KAJE;AAIA,IAAA,aAAa,EAAE,yBAAM;AAEpB,UAAID,MAAJ,EAAY;AACR;AACAJ,QAAAA,KAAK,CAACgB,GAAN,CAAU,eAAV,EAA2BC,KAA3B,CAAiC,UAAAC,GAAG;AAAA,iBAAIC,KAAK,CAACD,GAAD,CAAT;AAAA,SAApC;AACAV,QAAAA,WAAW,CAAC,KAAD,CAAX;AACA;AACH,OALD,MAKO;AACHC,QAAAA,YAAY;AACZH,QAAAA,kBAAkB;AACrB;AACJ,KAfE;AAeA,IAAA,aAAa,EAAE;AAAA,aAAMC,kBAAkB,EAAxB;AAAA,KAff;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAgBH,CAlBD;;AAoBAJ,MAAM,CAACiB,SAAP,GAAmB;AACfhB,EAAAA,MAAM,EAAEH,SAAS,CAACoB,IAAV,CAAeC,UADR;AAEfjB,EAAAA,mBAAmB,EAAEJ,SAAS,CAACsB,IAAV,CAAeD,UAFrB;AAGfhB,EAAAA,kBAAkB,EAAEL,SAAS,CAACsB,IAAV,CAAeD,UAHpB;AAIff,EAAAA,kBAAkB,EAAEN,SAAS,CAACsB,IAAV,CAAeD,UAJpB;AAKfd,EAAAA,WAAW,EAAEP,SAAS,CAACsB,IAAV,CAAeD,UALb;AAMfb,EAAAA,YAAY,EAAER,SAAS,CAACsB,IAAV,CAAeD,UANd;AAOfZ,EAAAA,MAAM,EAAET,SAAS,CAACuB,MAAV,CAAiBF;AAPV,CAAnB;AAUA,eAAenB,MAAf","sourcesContent":["import NavbarView from '../Navbar-view'\nimport axios from 'axios'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Navbar = ({ active, authenticationError, toggleSignInButton, toggleSignUpButton, setSignedIn, errorCleared, viewer }) => {\n    console.log(viewer)\n    return <NavbarView active={active}\n        onProfileClick={() => {\n            return active ? window.location.replace('/profile/' + viewer) :\n                authenticationError()\n        }} onSigninClick={() => {\n\n            if (active) {\n                // logout\n                axios.get('/users/logout').catch(err => alert(err))\n                setSignedIn(false)\n                return\n            } else {\n                errorCleared()\n                toggleSignInButton()\n            }\n        }} onSignupClick={() => toggleSignUpButton()} />\n}\n\nNavbar.propTypes = {\n    active: PropTypes.bool.isRequired,\n    authenticationError: PropTypes.func.isRequired,\n    toggleSignInButton: PropTypes.func.isRequired,\n    toggleSignUpButton: PropTypes.func.isRequired,\n    setSignedIn: PropTypes.func.isRequired,\n    errorCleared: PropTypes.func.isRequired,\n    viewer: PropTypes.string.isRequired\n}\n\nexport default Navbar\n\n"]},"metadata":{},"sourceType":"module"}