{"ast":null,"code":"var _jsxFileName = \"/Users/Overseer/Desktop/fullstack_app/client/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Landing from './routes/Landing';\nimport Homeglobe from './routes/Homeglobe';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUser, faEnvelope, faKey, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { signedIn } from './actions';\n\nasync function getUser(signedIn) {\n  try {\n    let res = await axios.get('http://localhost:3001/api/users');\n\n    if (res.status === 200) {\n      signedIn(res.data);\n      return;\n    }\n\n    alert(res);\n  } catch (err) {\n    alert(err);\n  }\n}\n\nlibrary.add(faUser, faEnvelope, faKey, faCheck);\n\nconst App = ({\n  signedIn\n}) => {\n  getUser(signedIn);\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Landing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/homeglobe\",\n    component: Homeglobe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signedIn: id => dispatch(signedIn(id))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Overseer/Desktop/fullstack_app/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Landing","Homeglobe","library","faUser","faEnvelope","faKey","faCheck","axios","connect","signedIn","getUser","res","get","status","data","alert","err","add","App","mapDispatchToProps","dispatch","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,KAA7B,EAAoCC,OAApC,QAAmD,mCAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,eAAeC,OAAf,CAAuBD,QAAvB,EAAiC;AAC7B,MAAI;AACA,QAAIE,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,iCAAV,CAAhB;;AACA,QAAID,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpBJ,MAAAA,QAAQ,CAACE,GAAG,CAACG,IAAL,CAAR;AACA;AACH;;AACDC,IAAAA,KAAK,CAACJ,GAAD,CAAL;AACH,GAPD,CAQA,OAAOK,GAAP,EAAY;AACRD,IAAAA,KAAK,CAACC,GAAD,CAAL;AACH;AACJ;;AAEDd,OAAO,CAACe,GAAR,CAAYd,MAAZ,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,OAAvC;;AAEA,MAAMY,GAAG,GAAG,CAAC;AAAET,EAAAA;AAAF,CAAD,KAAkB;AAC1BC,EAAAA,OAAO,CAACD,QAAD,CAAP;AACA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAET,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,SAAS,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CARD;;AAUA,MAAMkB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHX,IAAAA,QAAQ,EAAEY,EAAE,IAAID,QAAQ,CAACX,QAAQ,CAACY,EAAD,CAAT;AADrB,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCD,GAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Landing from './routes/Landing'\nimport Homeglobe from './routes/Homeglobe'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faUser, faEnvelope, faKey, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { signedIn } from './actions'\n\nasync function getUser(signedIn) {\n    try {\n        let res = await axios.get('http://localhost:3001/api/users')\n        if (res.status === 200) {\n            signedIn(res.data)\n            return\n        }\n        alert(res)\n    }\n    catch (err) {\n        alert(err);\n    }\n}\n\nlibrary.add(faUser, faEnvelope, faKey, faCheck)\n\nconst App = ({ signedIn }) => {\n    getUser(signedIn)\n    return (\n        <Router>\n            <Route exact path=\"/\" component={Landing} />\n            <Route path=\"/homeglobe\" component={Homeglobe} />\n        </Router>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signedIn: id => dispatch(signedIn(id))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(App)"]},"metadata":{},"sourceType":"module"}